
; BOS jump table functions
	public _boot_os
	public _handle_interrupt
	public _HandleInstruction
	public _handle_offsetcall
	public _sys_ExecuteFile
	public _os_GetOSInfo
	public _fs_OpenFile
	public _fs_GetSectorAddress
	public _fs_CheckDirExists
	public _fs_CeilDivBySector
	public _fs_CopyFileName
	public _fs_Read
	public _fs_Write
	public _sys_AddHLAndA
	public _sys_AnyKey
	public _sys_FreeAll
	public _sys_GetKey
	public _sys_KbScan
	public _sys_Malloc
	public _fs_CreateRamFile
	public _sys_MemSet
	public _fs_AllocRam
	public _sys_WaitKey
	public _sys_WaitKeyCycle
	public _asm_gui_DrawConsoleWindow
	public _gui_Input
	public _gui_NewLine
	public _asm_gui_Print
	public _asm_gui_PrintInt
	public _gui_Scroll
	public _bosgfx_BlitBuffer
	public _asm_bosgfx_PrintString
	public __MemClear
	public __PushOP1
	public __PopOP1
	public __Mov9ToOP1
	public __CpHLDE
	public __Mov8b
	public __ChkFindSym
	public __LoadDEInd_s
	public __EnoughMem
	public __InsertMem
	public __SetHLUTo0
	public __PutS
	public __GetCSC
	public __NewLine
	public __ClrScrn
	public __HomeUp
	public __ErrMemory
	public __DrawStatusBar
	public __os_GetSystemInfo
	public __UsbPowerVbus
	public __UsbUnpowerVbus
	public _sys_EraseFlashSector
	public _sys_FlashUnlock
	public _sys_FlashLock
	public _fs_CreateFile
	public _strupper
	public _strlower
	public _fs_AbsPath
	public _fs_MultByBytesPerSector
	public __LoadLibraryOP1
	public _fs_OpenFileInDir
	public _fs_SetSize
	public _fs_WriteFile
	public _sys_HLToString
	public _fs_DeleteFile
	public __DelVar
	public __CreateVar
	public _gui_InputNoClear
	public _fs_InitClusterMap
	public _sys_WriteFlash
	public _sys_WriteFlashA
	public _sys_JoinArgv
	public _fs_PathLen
	public _fs_ParentDir
	public _fs_StrToFileEntry
	public _fs_DirList
	public _sys_Free
	public _sys_CallExecuteFile
	public _sys_JumpExecuteFile
	public _sys_OpenDevice
	public _fs_CopyFile
	public _fs_GetSector
	public _fs_WriteByte
	public _fs_RenameFile
	public __SetCursorPos
	public _fs_CreateDir
	public _bosgfx_BufClear
	public _bosgfx_LcdClear
	public _fs_SanityCheck
	public _sys_SetupOnInterruptHandler
	public _asm_gui_PrintChar
	public _bosgfx_SetDraw
	public _asm_gui_PrintString
	public _asm_gui_PrintLine
	public _asm_gui_PrintUInt
	public _sys_WriteFlashFullRam
	public _sys_WriteFlashByteFullRam
	public _fs_GetFilePtr
	public _sys_ExecuteFileFromPtr
	public _sys_ExecuteFileHL
	public _sys_TurnOff
	public _sys_NextProcessId
	public _sys_PrevProcessId
	public _sys_FreeProcessId
	public _fs_GarbageCollect
	public _bosgfx_SwapTextColors
	public _fs_WriteNewFile
	public _bosgfx_SetFont
	public _bosgfx_SetDefaultFont
	public _sys_FreeRunningProcessId
	public _util_Zx7Decompress
	public _sys_CheckMallocRAM
	public _bosgfx_Compute
	public _bosgfx_FillRectangle
	public _bosgfx_FillScreen
	public _bosgfx_GetFontPtr
	public _bosgfx_HorizLine
	public _bosgfx_InitStdPalette
	public _bosgfx_NextLine
	public _bosgfx_PrintChar
	public _bosgfx_PrintHexA
	public _bosgfx_PrintUInt
	public _bosgfx_Rectangle
	public _bosgfx_Set8bpp
	public _bosgfx_Set16bpp
	public _bosgfx_SetTextXY
	public _bosgfx_Sprite
	public _bosgfx_Sprite2x
	public _bosgfx_VertLine
	public _sys_Malloc32Align32
	public _sys_Malloc64Align256
	public _asm_bosgfx_PrintStringXY
	public _bosgfx_GetTextX
	public _bosgfx_GetTextY
	public _fs_CheckWritable
	public _fs_CheckWritableFD
	public _sys_OpenFileInPath
	public _sys_VarString
	public _fs_GetFreeSpace
	public _fs_GetFDPtr
	public _fs_GetFDLen
	public __OP1ToPath
	public _th_WaitKeyCycle
	public _fs_JoinPath
	public _sys_MallocPersistent
	public _sys_OpenFileInVar
	public _fs_BaseName
	public _fs_MoveFile
	public _fs_WriteRaw
	public __UnpackUpdates
	public _LCD_PAL?
	public _LCD_CTRL?
	public _LCD_VRAM?
	public _LCD_BUFFER?
	public _LCD_WIDTH?
	public _LCD_HEIGHT?
	public _LCD_8BPP?
	public _LCD_16BPP?
	public _TEXT_MAX_ROW
	public _RAM_START
	public _flag_start
	public _currow?
	public _curcol?
	public _console_col
	public _console_line
	public _color_primary
	public _lcd_bg_color
	public _lcd_text_fg
	public _lcd_text_bg
	public _lcd_text_fg2
	public _lcd_text_bg2
	public _cursor_color
	public _font_data
	public _font_spacing
	public _lcd_x
	public _lcd_y
	public _remaining_free_RAM
	public _op_stack_ptr
	public _on_interrupt_jump
	public _on_interrupt_handler
	public _cur_lcd_buffer
	public _running_process_id
	public _ScrapMem2
	public _top_of_UserMem
	public _LastCommandResult
	public _ExecutingFileFd
	public _running_program_ptr
	public _return_code_flags
	public _flashStatusByte
	public _filesystem_driver
	public _copy_buffer
	public _threading_enabled
	public _current_thread
	public _bosgfx_string_temp
	public _saved_LcdUpbase
	public _ScrapByte
	public _ScrapWord
	public _ScrapMem
	public _last_keypress
	public _asm_prgm_size
	public _SaveSP
	public _fsOP1
	public _fsOP2
	public _fsOP3
	public _fsOP4
	public _fsOP5
	public _fsOP6
	public _safeRAM
	public _safeRAM_len
	public _usbArea
	public _usbHandleKeys
	public _usbInited
	public _heapBot
	public _ramCodeTop
	public _reservedRAM
	public _bos_UserMem
	public _end_of_usermem
	public _libload_bottom_ptr
	public _libload_top_ptr
	public _op_stack_bot
	public _op_stack_top
	public _current_working_dir
	public _InputBuffer
	public _thread_temp_save
	public _malloc_cache
	public _thread_map
	public _thread_parents
	public _bottom_of_malloc_RAM
	public _top_of_vat
	public _top_of_RAM
	public _start_of_user_archive
	public _fs_root_dir_lba
	public _fs_root_dir_address
	public _end_of_user_archive
	public _fs_cluster_map
	public _fs_cluster_map.len
	public _fs_cmap_length
	public _fs_sector_size
	public _fs_partition_desc_size
	public _fs_file_desc_size
	public _fd_readonly
	public _fd_hidden
	public _fd_system
	public _fd_subfile
	public _fd_subdir
	public _fd_device
	public _fd_link
	public _fd_elevated
	public _fsentry_endofdir
	public _fsentry_dot
	public _fsentry_deleted
	public _fsentry_longfilename
	public _fsentry_unlisted
	public _fsentry_endofdir2
	public _fsentry_filename
	public _fsentry_filename.len
	public _fsentry_fileext
	public _fsentry_fileext.len
	public _fsentry_fileattr
	public _fsentry_fileattr.len
	public _fsentry_filesector
	public _fsentry_filesector.len
	public _fsentry_filelen
	public _fsentry_filelen.len
	public _device_Header
	public _device_Flags
	public _device_Type
	public _device_Version
	public _device_JumpTable
	public _device_JumpInit
	public _device_JumpDeinit
	public _device_JumpRead
	public _device_JumpWrite
	public _device_JumpGetDMA
	public _device_CodeStart
	public _device_Header.len
	public _device_Flags.len
	public _device_Type.len
	public _device_Version.len
	public _device_JumpTable.len
	public _bDeviceWritable
	public _bDeviceReadable
	public _bDeviceHasDMA
	public _bDeviceDMAWritable
	public _bDeviceDMAReadable
	public _bDeviceNeedsInit
	public _bDeviceNeedsDeinit
	public _devtSoftware
	public _devtMemory
	public _devtMMIO
	public _devtUSB
	public _devtMSD
	public _devtMSDFS
	public _devtMSDFAT32
	public _threadsDisabled
	public _threadsEnabled
	public _threadOSRoutines
	public _bThreadAlive
	public _bThreadPersistent
	public _bThreadSleeping
	public _bIsFlashUnlocked
	public _bKeepFlashUnlocked
	public _mIsFlashUnlocked
	public _mKeepFlashUnlocked
	public _bReturnNotError
	public _bReturnHex
	public _bReturnLong
	public _bSilentReturn
_boot_os                         := $20108
_handle_interrupt                := $2010C
_HandleInstruction               := $20110
_handle_offsetcall               := $2011C
_sys_ExecuteFile                 := $22400
_os_GetOSInfo                    := $22404
_fs_OpenFile                     := $22408
_fs_GetSectorAddress             := $2240C
_fs_CheckDirExists               := $22410
_fs_CeilDivBySector              := $22414
_fs_CopyFileName                 := $22418
_fs_Read                         := $2241C
_fs_Write                        := $22420
_sys_AddHLAndA                   := $22424
_sys_AnyKey                      := $22428
_sys_FreeAll                     := $2242C
_sys_GetKey                      := $22430
_sys_KbScan                      := $22434
_sys_Malloc                      := $22438
_fs_CreateRamFile                := $2243C
_sys_MemSet                      := $22440
_fs_AllocRam                     := $22444
_sys_WaitKey                     := $22448
_sys_WaitKeyCycle                := $2244C
_asm_gui_DrawConsoleWindow           := $22450
_gui_Input                       := $22454
_gui_NewLine                     := $22458
_asm_gui_Print                       := $2245C
_asm_gui_PrintInt                    := $22460
_gui_Scroll                      := $22464
_bosgfx_BlitBuffer                  := $22468
_asm_bosgfx_PrintString                 := $2246C
__MemClear                       := $22470
__PushOP1                        := $22474
__PopOP1                         := $22478
__Mov9ToOP1                      := $2247C
__CpHLDE                         := $22480
__Mov8b                          := $22484
__ChkFindSym                     := $22488
__LoadDEInd_s                    := $2248C
__EnoughMem                      := $22490
__InsertMem                      := $22494
__SetHLUTo0                      := $22498
__PutS                           := $2249C
__GetCSC                         := $224A0
__NewLine                        := $224A4
__ClrScrn                        := $224A8
__HomeUp                         := $224AC
__ErrMemory                      := $224B0
__DrawStatusBar                  := $224B4
__os_GetSystemInfo               := $224B8
__UsbPowerVbus                   := $224BC
__UsbUnpowerVbus                 := $224C0
_sys_EraseFlashSector            := $224C4
_sys_FlashUnlock                 := $224C8
_sys_FlashLock                   := $224CC
_fs_CreateFile                   := $224D0
_strupper                        := $224D4
_strlower                        := $224D8
_fs_AbsPath                      := $224DC
_fs_MultByBytesPerSector         := $224E0
__LoadLibraryOP1                 := $224E4
_fs_OpenFileInDir                := $224E8
_fs_SetSize                      := $224EC
_fs_WriteFile                    := $224F0
_sys_HLToString                  := $224F4
_fs_DeleteFile                   := $224F8
__DelVar                         := $224FC
__CreateVar                      := $22500
_gui_InputNoClear                := $22504
_fs_InitClusterMap               := $22508
_sys_WriteFlash                  := $2250C
_sys_WriteFlashA                 := $22510
_sys_JoinArgv                    := $22514
_fs_PathLen                      := $22518
_fs_ParentDir                    := $2251C
_fs_StrToFileEntry               := $22520
_fs_DirList                      := $22524
_sys_Free                        := $22528
_sys_CallExecuteFile             := $2252C
_sys_JumpExecuteFile             := $22530
_sys_OpenDevice                  := $22534
_fs_CopyFile                     := $22538
_fs_GetSector                    := $22548
_fs_WriteByte                    := $2254C
_fs_RenameFile                   := $22550
__SetCursorPos                   := $22554
_fs_CreateDir                    := $22558
_bosgfx_BufClear                    := $2255C
_bosgfx_LcdClear                    := $22560
_fs_SanityCheck                  := $22564
_sys_SetupOnInterruptHandler     := $22568
_asm_gui_PrintChar                   := $2256C
_bosgfx_SetDraw                     := $22570
_asm_gui_PrintString                 := $22574
_asm_gui_PrintLine                   := $22578
_asm_gui_PrintUInt                   := $2257C
_sys_WriteFlashFullRam           := $22580
_sys_WriteFlashByteFullRam       := $22584
_fs_GetFilePtr                   := $22588
_sys_ExecuteFileFromPtr          := $2258C
_sys_ExecuteFileHL               := $22590
_sys_TurnOff                     := $22594
_sys_NextProcessId               := $22598
_sys_PrevProcessId               := $2259C
_sys_FreeProcessId               := $225A0
_fs_GarbageCollect               := $225A4
_bosgfx_SwapTextColors              := $225A8
_fs_WriteNewFile                 := $225AC
_bosgfx_SetFont                     := $225B0
_bosgfx_SetDefaultFont              := $225B4
_sys_FreeRunningProcessId        := $225B8
_util_Zx7Decompress              := $225BC
_sys_CheckMallocRAM              := $225C0
_bosgfx_Compute                     := $225C4
_bosgfx_FillRectangle               := $225C8
_bosgfx_FillScreen                  := $225CC
_bosgfx_GetFontPtr                  := $225D0
_bosgfx_HorizLine                   := $225D4
_bosgfx_InitStdPalette              := $225D8
_bosgfx_NextLine                    := $225DC
_bosgfx_PrintChar                   := $225E0
_bosgfx_PrintHexA                   := $225E4
_bosgfx_PrintUInt                   := $225E8
_bosgfx_Rectangle                   := $225EC
_bosgfx_Set8bpp                     := $225F0
_bosgfx_Set16bpp                    := $225F4
_bosgfx_SetTextXY                   := $225F8
_bosgfx_Sprite                      := $225FC
_bosgfx_Sprite2x                    := $22600
_bosgfx_VertLine                    := $22604
_sys_Malloc32Align32             := $22608
_sys_Malloc64Align256            := $2260C
_asm_bosgfx_PrintStringXY               := $22610
_bosgfx_GetTextX                    := $22614
_bosgfx_GetTextY                    := $22618
_fs_CheckWritable                := $2261C
_fs_CheckWritableFD              := $22620
_sys_OpenFileInPath              := $22624
_sys_VarString                   := $22628
_fs_GetFreeSpace                 := $2262C
_fs_GetFDPtr                     := $22630
_fs_GetFDLen                     := $22634
__OP1ToPath                      := $22638
_th_WaitKeyCycle                 := $2263C
_fs_JoinPath                     := $22640
_sys_MallocPersistent            := $22644
_sys_OpenFileInVar               := $22648
_fs_BaseName                     := $2264C
_fs_MoveFile                     := $22650
_fs_WriteRaw                     := $22654
__UnpackUpdates                  := $22658
_LCD_PAL?    := 0E30200h
_LCD_CTRL?   := 0E30018h
_LCD_VRAM?   := 0D40000h
_LCD_BUFFER? := LCD_VRAM + LCD_WIDTH*LCD_HEIGHT
_LCD_WIDTH?  := 320
_LCD_HEIGHT? := 240
_LCD_8BPP?   := $27
_LCD_16BPP?  := $2D
_TEXT_MAX_ROW    := 231
_RAM_START  := 0D00000h
_flag_start             := $D00000
_currow?                := ti.curRow
_curcol?                := ti.curCol
_console_col            := curcol
_console_line           := currow
_color_primary          := ti.drawFGColor      ; 1 byte
_lcd_bg_color           := ti.drawFGColor+1    ; 1 byte
_lcd_text_fg            := ti.textFGcolor      ; 1 byte
_lcd_text_bg            := ti.textFGcolor+1    ; 1 byte
_lcd_text_fg2           := ti.textBGcolor      ; 1 byte
_lcd_text_bg2           := ti.textBGcolor+1    ; 1 byte
_cursor_color           := ti.statusBarBGColor ; 1 byte
_font_data              := ti.lFont_record
_font_spacing           := ti.lFont_record+3
_lcd_x                  := ti.lFont_record+6
_lcd_y                  := ti.lFont_record+9
_remaining_free_RAM     := ti.appData    ; 3 bytes
_op_stack_ptr           := ti.appData+3  ; 3 bytes
_on_interrupt_jump      := ti.appData+6  ; jump byte for on_interrupt_handler
_on_interrupt_handler   := ti.appData+7  ; 3 bytes. Jump to on key interrupt handler. Byte preceeding this should be $C3 or $C9
_cur_lcd_buffer         := ti.appData+10 ; 3 bytes. Points to current LCD draw buffer
_running_process_id     := ti.appData+13 ; 1 byte. Current process ID (used for per-program memory allocation)
_ScrapMem2              := ti.appData+14 ; 3 bytes
_top_of_UserMem         := ti.appData+17 ; 3 bytes
_LastCommandResult      := ti.appData+20 ; 4 bytes. Stores result of previously executed command
_ExecutingFileFd        := ti.appData+24 ; 3 bytes. Pointer to currently executing file descriptor. -1 if file not found. 0 if file descriptor is not applicable
_running_program_ptr    := ti.appData+27 ; 3 bytes. Stores pointer to currently running program
_return_code_flags      := ti.appData+30 ; flag byte that determines how to interpret the return value of the last run program. Is to be set within the program for non-default return interpretation.
_flashStatusByte        := ti.appData+31 ; 1 byte
_filesystem_driver      := ti.appData+32 ; 1 byte
_copy_buffer            := ti.appData+33 ; 3 bytes, points to first copy buffer entry, or -1 if nothing is stored.
_threading_enabled      := ti.appData+36 ; 1 byte, determines if software threading is enabled and whether it should be used in OS routines
_current_thread         := ti.appData+37 ; 1 byte, currently running thread ID
_bosgfx_string_temp        := ti.appData+38 ; 16 bytes, temp location for integer printing
_saved_LcdUpbase        := ti.appData+54 ; 3 bytes, saves LcdUpbase during sector caching
_ScrapByte              := ti.flashByte
_ScrapWord              := ti.scrapMem
_ScrapMem               := ti.scrapMem
_last_keypress          := ti.kbdScanCode ; 1 byte. Last keypress returned by an os getkey routine
_asm_prgm_size          := ti.asm_prgm_size ;3 bytes
_SaveSP                 := ti.errSP ; 3 bytes, saves SP when running programs.
_fsOP1                  := ti.OP1
_fsOP2                  := ti.OP2
_fsOP3                  := ti.OP3
_fsOP4                  := ti.OP4
_fsOP5                  := ti.OP5
_fsOP6                  := ti.OP6
_safeRAM                := ti.pixelShadow ; 69090 bytes scrap RAM
_safeRAM_len            := 69090
_usbArea                := ti.usbArea ; 14306 bytes used for usb, probably need to disable timer3/usb interrupts to use
_usbHandleKeys          := ti.usbHandleKeys ; zero this byte while using usbArea to keep GetCSC from affecting other parts of usbArea
_usbInited              := ti.usbInited ; zero this byte while using usbArea and to reset the usb stack when interrupts are re-enabled
_heapBot                := ti.heapBot
_ramCodeTop             := ti.ramCodeTop
_reservedRAM            := ti.ramCodeTop
_bos_UserMem            := $D1A881
_end_of_usermem         := libload_bottom_ptr-2
_libload_bottom_ptr     := libload_top_ptr-$3FE ; 1022 bytes for executing libload
_libload_top_ptr        := thread_temp_save-$400
_op_stack_bot           := thread_temp_save-$400
_op_stack_top           := thread_temp_save-$300 ;256 bytes downward
_current_working_dir    := thread_temp_save-$200
_InputBuffer            := thread_temp_save-$100
_thread_temp_save       := $D2F000 ; temporary save location for registers when a thread switch is triggered. 16 bytes per thread, 256 threads = 4096 bytes.
_malloc_cache           := $D2F800 ; 4096 bytes
_thread_map             := $D30000 ; thread map. 256 threads. Active threads have bit 7 set.
_thread_parents         := $D30100 ; 256 bytes, one per thread. Saves ID of thread that spawned a given thread. A thread will only be run if it's parent thread is awake
_bottom_of_malloc_RAM   := $D30200
_top_of_vat             := top_of_RAM
_top_of_RAM             := $D40000
_start_of_user_archive  := $040000 ;sector $04
_fs_root_dir_lba := $010000 shr 9
_fs_root_dir_address := start_of_user_archive + $010000
_end_of_user_archive    := $3B0000 ;sector $3B, start of certificate
_fs_cluster_map := $3BE000
_fs_cluster_map.len := 7040
_fs_cmap_length := fs_cluster_map.len
_fs_sector_size         := 512
_fs_partition_desc_size := 16
_fs_file_desc_size      := 16
_fd_readonly   := 0
_fd_hidden     := 1
_fd_system     := 2
_fd_subfile    := 3
_fd_subdir     := 4
_fd_device     := 5
_fd_link       := 6
_fd_elevated   := 7
_fsentry_endofdir        := $00
_fsentry_dot             := $2E
_fsentry_deleted         := $F0
_fsentry_longfilename    := $F1
_fsentry_unlisted        := $F2
_fsentry_endofdir2       := $FF
_fsentry_filename            := $00
_fsentry_filename.len        := 8
_fsentry_fileext             := $08
_fsentry_fileext.len         := 3
_fsentry_fileattr            := $0B
_fsentry_fileattr.len        := 1
_fsentry_filesector          := $0C
_fsentry_filesector.len      := 2
_fsentry_filelen             := $0E
_fsentry_filelen.len         := 2
_device_Header               := 0
_device_Flags                := 1
_device_Type                 := 2
_device_Version              := 3
_device_JumpTable            := 4 ; jump table for device functions
_device_JumpInit             := 4
_device_JumpDeinit           := 8
_device_JumpRead             := 12
_device_JumpWrite            := 16
_device_JumpGetDMA           := 20
_device_CodeStart            := 24
_device_Header.len           := 4
_device_Flags.len            := 1
_device_Type.len             := 1
_device_Version.len          := 1
_device_JumpTable.len        := 5*4 ; jump table for device functions
_bDeviceWritable             := 7
_bDeviceReadable             := 6
_bDeviceHasDMA               := 5
_bDeviceDMAWritable          := 4
_bDeviceDMAReadable          := 3
_bDeviceNeedsInit            := 2
_bDeviceNeedsDeinit          := 1
_devtSoftware                := $00
_devtMemory                  := $04
_devtMMIO                    := $08
_devtUSB                     := $10
_devtMSD                     := $14
_devtMSDFS                   := $15
_devtMSDFAT32                := $16
_threadsDisabled             := 0
_threadsEnabled              := 1
_threadOSRoutines            := 2
_bThreadAlive                := 7
_bThreadPersistent           := 6
_bThreadSleeping             := 5
_bIsFlashUnlocked     := 0
_bKeepFlashUnlocked   := 1
_mIsFlashUnlocked     := 1
_mKeepFlashUnlocked   := 2
_bReturnNotError      := 0
_bReturnHex           := 1
_bReturnLong          := 2
_bSilentReturn        := 3
