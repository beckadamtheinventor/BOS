	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_ntwk_process
_ntwk_process:
	call	_usb_HandleEvents
	ld	a, (_network_up)
	ld	l, 1
	xor	a, l
	bit	0, a
	jq	nz, BB0_3
BB0_2:
	ld	hl, 512
	push	hl
	ld	hl, _net_buf
	push	hl
	call	_usb_read_to_size
	pop	de
	pop	de
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB0_2
BB0_3:
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_usb_read_to_size
_usb_read_to_size:
	call	__frameset0
	ld	bc, (ix + 6)
	ld	hl, (ix + 9)
	ld	iy, _net_buf
	add	hl, bc
	ld	de, 514
	or	a, a
	sbc	hl, de
	push	bc
	push	iy
	ld	hl, _srl
	push	hl
	ld	hl, 0
	call	c, _srl_Read
	pop	de
	pop	de
	pop	de
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_ntwk_send
_ntwk_send:
	ld	hl, -5
	call	__frameset
	ld	a, (ix + 6)
	ld	l, 1
	ld	(ix + -1), a
	ld	a, (_network_up)
	ld	e, a
	xor	a, l
	bit	0, a
	jq	nz, BB2_2
	ld	hl, (ix + 12)
	ld	(ix + -5), e
	ld	de, 4
	ld	iy, 3
	add	hl, de
	ld	(ix + -4), hl
	push	iy
	pea	ix + -4
	call	_usb_write
	pop	hl
	pop	hl
	ld	hl, 1
	push	hl
	pea	ix + -1
	call	_usb_write
	pop	hl
	pop	hl
	ld	hl, (ix + 12)
	push	hl
	ld	hl, (ix + 9)
	push	hl
	call	_usb_write
	ld	e, (ix + -5)
	pop	hl
	pop	hl
	ld	l, 1
BB2_2:
	ld	a, e
	xor	a, l
	xor	a, l
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_usb_write
_usb_write:
	call	__frameset0
	ld	hl, (ix + 6)
	ld	de, (ix + 9)
	ld	bc, _srl
	push	de
	push	hl
	push	bc
	call	_srl_Write
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_conn_HandleInput
_conn_HandleInput:
	ld	hl, -6
	call	__frameset
	ld	de, 512
	ld	bc, 0
	ld	hl, (_incoming_data)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB4_2
	push	de
	call	_sys_Malloc
	ld	bc, 0
	pop	de
	ld	(_incoming_data), hl
BB4_2:
	ld	hl, (ix + 6)
	ld	a, (hl)
	cp	a, 4
	jq	c, BB4_5
	ld	hl, L_.str.2
BB4_4:
	push	hl
	call	_gui_PrintLine
BB4_24:
	pop	hl
	jq	BB4_25
BB4_5:
	ld	iy, 1
	inc	hl
	ld	(ix + -3), hl
	push	bc
	pop	de
	ld	e, a
	ld	hl, LJTI4_0
	add	hl, de
	add	hl, de
	add	hl, de
	ld	hl, (hl)
	jp	(hl)
BB4_6:
	ld	hl, (ix + -3)
	jq	BB4_4
BB4_7:
	ld	bc, (_incoming_file+12)
	push	bc
	pop	hl
	ld	de, 512
	add	hl, de
	ld	(ix + -6), hl
	ld	de, (_incoming_file+6)
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	push	hl
	pop	bc
	ex	de, hl
	ld	de, (ix + -6)
	or	a, a
	sbc	hl, de
	ld	de, 512
	jq	c, BB4_9
	push	de
	pop	bc
BB4_9:
	ld	(ix + -6), bc
	ld	hl, (_incoming_file+9)
	push	bc
	push	hl
	push	iy
	push	de
	ld	hl, (ix + -3)
	push	hl
	call	_fs_Write
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (_incoming_file+12)
	ld	de, (ix + -6)
	add	hl, de
	ld	(_incoming_file+12), hl
BB4_10:
	ld	hl, (_outgoing_file)
	push	hl
	call	_sys_Free
	pop	hl
	ld	hl, (ix + -3)
	push	hl
	call	_strlen
	push	hl
	pop	de
	pop	hl
	inc	de
	ld	hl, (ix + -3)
	add	hl, de
	ld	hl, (hl)
	ld	(_outgoing_file+6), hl
	or	a, a
	sbc	hl, hl
	ld	(_outgoing_file+12), hl
	ld	(ix + -6), de
	push	de
	call	_sys_Malloc
	pop	de
	ld	(_outgoing_file), hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB4_17
	ld	de, (ix + -6)
	push	de
	ld	de, (ix + -3)
	push	de
	push	hl
	call	_memcpy
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (_outgoing_file)
	push	hl
	call	_fs_OpenFile
	pop	de
	ld	(_outgoing_file+9), hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB4_14
	ld	hl, L_.str
	push	hl
	call	_gui_PrintLine
	pop	hl
	ld	hl, 23
	push	hl
	ld	hl, L_.str.1
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_ntwk_send
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (_outgoing_file+9)
BB4_14:
	push	hl
	call	_fs_GetFDPtr
	pop	de
	ld	(_outgoing_file+3), hl
	ld	hl, (_outgoing_file+9)
	push	hl
	call	_fs_GetFDLen
	pop	de
	ld	(_outgoing_file+6), hl
	ld	hl, (_outgoing_file)
	push	hl
	call	_strlen
	pop	de
	ld	de, 4
	add	hl, de
	ld	(ix + -3), hl
	push	hl
	call	_sys_Malloc
	pop	de
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB4_17
	ld	de, (ix + -3)
	push	de
	push	hl
	ld	hl, 1
	push	hl
	call	_ntwk_send
	pop	hl
	pop	hl
	pop	hl
BB4_19:
	ld	de, (_incoming_data)
	ld	(ix + -3), de
	ld	bc, (_outgoing_file+3)
	ld	(ix + -6), bc
	ld	hl, 512
	push	hl
	push	bc
	push	de
	call	_memcpy
	pop	hl
	pop	hl
	pop	hl
	ld	de, 512
	ld	hl, (ix + -6)
	add	hl, de
	ld	(_outgoing_file+3), hl
	ld	hl, 512
	push	hl
	ld	hl, (ix + -3)
	push	hl
	ld	hl, 2
	push	hl
	call	_ntwk_send
	pop	hl
	pop	hl
	pop	hl
	ld	de, (_outgoing_file+12)
	push	de
	pop	hl
	ld	bc, 512
	add	hl, bc
	ld	(ix + -3), hl
	ld	bc, (_outgoing_file+6)
	push	bc
	pop	hl
	ld	(ix + -6), de
	or	a, a
	sbc	hl, de
	push	hl
	pop	iy
	push	bc
	pop	hl
	ld	de, (ix + -3)
	or	a, a
	sbc	hl, de
	jq	c, BB4_21
	ld	iy, 512
BB4_21:
	ld	de, (ix + -6)
	add	iy, de
	ld	(_outgoing_file+12), iy
	lea	hl, iy + 0
	or	a, a
	sbc	hl, bc
	jq	c, BB4_19
	jq	BB4_25
BB4_16:
	ld	hl, (_incoming_file)
	push	hl
	call	_sys_Free
	pop	hl
	ld	hl, (ix + -3)
	push	hl
	call	_strlen
	push	hl
	pop	de
	pop	hl
	inc	de
	ld	hl, (ix + -3)
	add	hl, de
	ld	hl, (hl)
	ld	(_incoming_file+6), hl
	or	a, a
	sbc	hl, hl
	ld	(_incoming_file+12), hl
	ld	(ix + -6), de
	push	de
	call	_sys_Malloc
	pop	de
	ld	(_incoming_file), hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB4_22
BB4_17:
	call	_malloc_error
BB4_25:
	ld	sp, ix
	pop	ix
	ret
BB4_22:
	ld	de, (ix + -6)
	push	de
	ld	de, (ix + -3)
	push	de
	push	hl
	call	_memcpy
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (_incoming_file)
	push	hl
	call	_fs_OpenFile
	pop	de
	ld	(_incoming_file+9), hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB4_25
	ld	hl, (_incoming_file)
	ld	de, (_incoming_file+6)
	push	de
	ld	de, 0
	push	de
	push	hl
	call	_fs_CreateFile
	pop	hl
	pop	hl
	jq	BB4_24
	section	.text,"ax",@progbits
	section	.rodata,"a",@progbits
lJTI4_0:
	private	LJTI4_0
LJTI4_0:
	dl	BB4_6
	dl	BB4_16
	dl	BB4_7
	dl	BB4_10

	section	.text,"ax",@progbits
	public	_malloc_error
_malloc_error:
	ld	hl, L_.str.3
	push	hl
	call	_gui_PrintLine
	pop	hl
	ld	hl, 48
	push	hl
	ld	hl, L_.str.3
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_ntwk_send
	pop	hl
	pop	hl
	pop	hl
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_init_usb
_init_usb:
	xor	a, a
	ld	(_network_up), a
	call	_srl_GetCDCStandardDescriptors
	ld	de, 36106
	push	de
	push	hl
	ld	hl, 0
	push	hl
	ld	hl, _handle_usb_event
	push	hl
	call	_usb_Init
	pop	de
	pop	de
	pop	de
	pop	de
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB6_1
	ld	a, 0
	ret
BB6_1:
	ld	a, 1
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	private	_handle_usb_event
_handle_usb_event:
	call	__frameset0
	ld	de, (ix + 6)
	ld	iy, _srl
	ld	bc, 1
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	jq	nz, BB7_2
	push	iy
	call	_srl_Close
	pop	hl
	xor	a, a
	jq	BB7_7
BB7_2:
	ld	bc, 2
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	jq	nz, BB7_4
	call	_usb_GetRole
	ld	a, l
	bit	4, a
	jq	z, BB7_5
	jq	BB7_8
BB7_4:
	ld	bc, 8
	ex	de, hl
	or	a, a
	sbc	hl, bc
	jq	nz, BB7_8
BB7_5:
	ld	iy, (ix + 9)
	ld	de, _srl_buf
	ld	bc, 1024
	ld	hl, 115200
	push	hl
	ld	hl, -1
	push	hl
	push	bc
	push	de
	push	iy
	ld	hl, _srl
	push	hl
	call	_srl_Open
	pop	de
	pop	de
	pop	de
	pop	de
	pop	de
	pop	de
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB7_8
	ld	a, 1
BB7_7:
	ld	(_network_up), a
BB7_8:
	or	a, a
	sbc	hl, hl
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.bss,"aw",@nobits
	public	_incoming_data
_incoming_data:
	rb	3

	section	.bss,"aw",@nobits
	public	_network_up
_network_up:
	rb	1

	section	.bss,"aw",@nobits
	public	_net_buf
_net_buf:
	rb	513

	section	.bss,"aw",@nobits
	public	_incoming_file
_incoming_file:
	rb	15

	section	.bss,"aw",@nobits
	public	_outgoing_file
_outgoing_file:
	rb	15

	section	.rodata,"a",@progbits
	private	L_.str
L_.str:
	db	"Error: Requested outgoing file not found. Aborting transfer.",000o

	section	.rodata,"a",@progbits
	private	L_.str.1
L_.str.1:
	db	"Error: File not found.",000o

	section	.rodata,"a",@progbits
	private	L_.str.2
L_.str.2:
	db	"Warning: Unknown or invalid packet recieved.",000o

	section	.rodata,"a",@progbits
	private	L_.str.3
L_.str.3:
	db	"Error: Out of malloc memory. Aborting transfer.",000o

	section	.bss,"aw",@nobits
	public	_srl
_srl:
	rb	39

	section	.bss,"aw",@nobits
	public	_srl_buf
_srl_buf:
	rb	1024

	ident	"clang version 12.0.0 (https://github.com/jacobly0/llvm-project 170be88120e3aa88c20eea5615ba76b8f1d6c647)"
	extern	_srl_Open
	extern	__Unwind_SjLj_Register
	extern	__frameset
	extern	_srl_Write
	extern	_srl_GetCDCStandardDescriptors
	extern	_fs_CreateFile
	extern	_srl_Close
	extern	_gui_PrintLine
	extern	_fs_GetFDPtr
	extern	_fs_GetFDLen
	extern	_fs_OpenFile
	extern	_memcpy
	extern	_usb_HandleEvents
	extern	_sys_Malloc
	extern	_strlen
	extern	_usb_GetRole
	extern	_fs_Write
	extern	__Unwind_SjLj_Unregister
	extern	_sys_Free
	extern	_srl_Read
	extern	__frameset0
	extern	_usb_Init
