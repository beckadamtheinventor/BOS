	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_transfer_file
_transfer_file:
	ld	hl, -670
	call	__frameset
	ld	hl, L_.str
	ld	de, 0
	ld	bc, -655
	lea	iy, ix
	add	iy, bc
	ld	(iy), de
	lea	de, ix - 70
	push	ix
	ld	bc, -649
	add	ix, bc
	ld	(ix), de
	pop	ix
	push	hl
	call	_gui_Print
	pop	hl
	ld	hl, (ix + 9)
	push	hl
	call	_gui_Print
	pop	hl
	ld	hl, L_.str.1
	push	hl
	call	_gui_Print
	pop	hl
	ld	hl, (ix + 12)
	push	hl
	call	_gui_Print
	pop	hl
	call	_gui_NewLine
	ld	hl, (ix + 9)
	ld	a, (hl)
	cp	a, 42
	push	hl
	pop	bc
	inc	bc
	ld	de, -652
	lea	iy, ix
	push	af
	add	iy, de
	pop	af
	ld	(iy), bc
	jq	nz, BB0_12
	push	bc
	ld	hl, (ix + 6)
	push	hl
	ld	bc, -649
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_fat_Open
	pop	de
	pop	de
	pop	de
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB0_13
	jq	BB0_2
BB0_12:
	push	hl
	call	_fs_OpenFile
	pop	de
	ld	bc, -658
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	ld	de, -1
	or	a, a
	sbc	hl, de
	jq	nz, BB0_2
BB0_13:
	ld	hl, L_.str.2
	jq	BB0_14
BB0_2:
	ld	bc, -646
	lea	hl, ix
	add	hl, bc
	push	hl
	pop	de
	ld	hl, (ix + 12)
	ld	a, (hl)
	cp	a, 42
	jq	nz, BB0_21
	ld	bc, -670
	lea	iy, ix
	add	iy, bc
	ld	(iy), de
	inc	hl
	push	ix
	ld	bc, -661
	add	ix, bc
	ld	(ix), hl
	pop	ix
	push	hl
	call	_fs_ParentDir
	ld	bc, -667
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	pop	de
	push	hl
	call	_strlen
	pop	de
	ld	de, 2
	add	hl, de
	ex	de, hl
	ld	hl, (ix + 12)
	add	hl, de
	ld	bc, -664
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	ld	bc, -661
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	hl, (ix + 6)
	push	hl
	call	_fat_Delete
	pop	hl
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	bc, -664
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	bc, -667
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	hl, (ix + 6)
	push	hl
	call	_fat_Create
	pop	de
	pop	de
	pop	de
	pop	de
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB0_35
	ld	bc, -134
	lea	hl, ix
	add	hl, bc
	push	hl
	pop	de
	ld	bc, -661
	lea	iy, ix
	add	iy, bc
	ld	hl, (iy)
	push	hl
	ld	hl, (ix + 6)
	push	hl
	lea	hl, ix
	add	hl, bc
	ld	(hl), de
	push	de
	call	_fat_Open
	pop	de
	pop	de
	pop	de
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB0_35
	ld	de, (ix + 6)
	ld	hl, (ix + 9)
	ld	a, (hl)
	cp	a, 42
	jq	nz, BB0_18
	ld	bc, -652
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	push	de
	ld	bc, -649
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_fat_Open
	pop	de
	pop	de
	pop	de
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB0_13
	ld	bc, -649
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_fat_GetSize
	pop	bc
	ld	bc, -658
	lea	iy, ix
	add	iy, bc
	ld	(iy), de
	push	de
	push	ix
	ld	bc, -652
	add	ix, bc
	ld	(ix), hl
	pop	ix
	push	hl
	ld	bc, -661
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_fat_SetSize
	pop	de
	pop	de
	pop	de
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB0_35
	xor	a, a
BB0_9:
	ld	bc, -655
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	e, a
	ld	(ix - 3), de
	ld	de, -652
	lea	iy, ix
	add	iy, de
	ld	bc, (iy)
	push	ix
	ld	de, -658
	add	ix, de
	ld	iy, (ix)
	pop	ix
	ld	de, (ix - 3)
	ld	d, a
	ld	a, iyl
	call	__lcmpu
	jq	nc, BB0_17
	ld	bc, -664
	lea	hl, ix
	add	hl, bc
	ld	(hl), d
	ld	bc, -670
	lea	iy, ix
	add	iy, bc
	ld	hl, (iy)
	push	hl
	ld	hl, 1
	push	hl
	ld	bc, -649
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_fat_Read
	pop	de
	pop	de
	pop	de
	ld	de, 1
	or	a, a
	sbc	hl, de
	jq	nz, BB0_11
	ld	bc, -670
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	hl, 1
	push	hl
	ld	bc, -661
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_fat_Write
	push	hl
	pop	iy
	pop	hl
	pop	hl
	pop	hl
	ld	bc, -655
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	ix
	ld	bc, -664
	add	ix, bc
	ld	e, (ix)
	pop	ix
	ld	bc, 512
	xor	a, a
	call	__ladd
	ld	(ix - 3), bc
	push	ix
	ld	bc, -655
	add	ix, bc
	ld	(ix), hl
	pop	ix
	ld	a, e
	ld	hl, 1
	ex	de, hl
	lea	hl, iy
	or	a, a
	sbc	hl, de
	ld	bc, (ix - 3)
	jq	z, BB0_9
	jq	BB0_16
BB0_21:
	ld	hl, (ix + 9)
	ld	a, (hl)
	cp	a, 42
	jq	nz, BB0_32
	ld	bc, -670
	lea	hl, ix
	add	hl, bc
	ld	(hl), de
	ld	bc, -649
	lea	iy, ix
	add	iy, bc
	ld	hl, (iy)
	push	hl
	call	_fat_GetSize
	push	hl
	pop	bc
	ld	a, e
	pop	hl
	ld	hl, 65535
	ld	e, 0
	call	__lcmpu
	jq	nc, BB0_24
	ld	hl, L_.str.5
	jq	BB0_14
BB0_32:
	ld	bc, -658
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_fs_GetFDPtr
	ld	bc, -649
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	pop	hl
	ld	bc, -658
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_fs_GetFDLen
	pop	de
	push	hl
	ld	bc, -649
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	hl, (ix + 12)
	push	hl
	call	_fs_WriteNewFile
	pop	hl
	pop	hl
	pop	hl
	jq	BB0_33
BB0_24:
	ld	de, -655
	lea	hl, ix
	add	hl, de
	ld	(hl), a
	ld	de, -652
	lea	iy, ix
	add	iy, de
	ld	(iy), bc
	push	bc
	or	a, a
	sbc	hl, hl
	push	hl
	ld	hl, (ix + 12)
	push	hl
	call	_fs_CreateFile
	push	hl
	pop	bc
	pop	hl
	pop	hl
	pop	hl
	push	bc
	pop	hl
	ld	de, -1
	or	a, a
	sbc	hl, de
	jq	nz, BB0_25
BB0_35:
	ld	hl, L_.str.6
BB0_14:
	push	hl
	call	_gui_PrintLine
	pop	hl
	xor	a, a
BB0_34:
	ld	sp, ix
	pop	ix
	ret
BB0_18:
	ld	bc, -658
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_fs_GetFDLen
	pop	de
	ld	c, 9
	call	__ishru
	ld	de, -649
	lea	iy, ix
	add	iy, de
	ld	(iy), hl
	push	ix
	ld	de, -658
	add	ix, de
	ld	hl, (ix)
	pop	ix
	push	hl
	call	_fs_GetFDPtr
	pop	de
	push	hl
	ld	bc, -649
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	bc, -661
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_fat_Write
	pop	de
	pop	de
	pop	de
	ld	bc, -649
	lea	iy, ix
	add	iy, bc
	ld	de, (iy)
	or	a, a
	sbc	hl, de
	jq	nz, BB0_16
	jq	BB0_19
BB0_25:
	ld	iy, 512
	ld	de, -652
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	push	ix
	ld	de, -658
	add	ix, de
	ld	(ix), hl
	pop	ix
	ld	de, -661
	lea	hl, ix
	add	hl, de
	ld	(hl), bc
BB0_26:
	lea	de, iy
	ld	bc, -512
	add	iy, bc
	lea	hl, iy
	ld	(ix - 3), de
	push	ix
	ld	de, -652
	add	ix, de
	ld	bc, (ix)
	pop	ix
	or	a, a
	sbc	hl, bc
	call	__setflag
	ld	de, (ix - 3)
	jq	p, BB0_31
	ld	bc, -667
	lea	hl, ix
	add	hl, bc
	ld	(hl), iy
	ld	bc, -664
	lea	iy, ix
	add	iy, bc
	ld	(iy), de
	push	ix
	ld	bc, -670
	add	ix, bc
	ld	hl, (ix)
	pop	ix
	push	hl
	ld	hl, 1
	push	hl
	ld	bc, -649
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_fat_Read
	pop	de
	pop	de
	pop	de
	ld	de, 1
	or	a, a
	sbc	hl, de
	jq	nz, BB0_11
	ld	e, 0
	ld	bc, -664
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	(ix - 3), de
	ld	de, -652
	lea	iy, ix
	add	iy, de
	ld	bc, (iy)
	push	ix
	ld	de, -655
	add	ix, de
	ld	a, (ix)
	pop	ix
	ld	de, (ix - 3)
	call	__lcmpu
	ld	hl, 512
	jq	c, BB0_30
	ld	bc, -658
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
BB0_30:
	ld	bc, -667
	lea	iy, ix
	add	iy, bc
	ld	de, (iy)
	push	de
	push	ix
	ld	bc, -661
	add	ix, bc
	ld	de, (ix)
	pop	ix
	push	de
	ld	de, 1
	push	de
	push	hl
	ld	bc, -670
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_fs_WriteRaw
	ld	de, -661
	lea	iy, ix
	add	iy, de
	ld	bc, (iy)
	pop	de
	pop	de
	pop	de
	pop	de
	pop	de
	ld	de, -512
	push	ix
	ld	bc, -658
	add	ix, bc
	ld	iy, (ix)
	pop	ix
	add	iy, de
	push	ix
	add	ix, bc
	ld	(ix), iy
	pop	ix
	ld	bc, -664
	lea	iy, ix
	add	iy, bc
	ld	iy, (iy)
	ld	de, 512
	add	iy, de
	ld	de, -1
	or	a, a
	sbc	hl, de
	jq	nz, BB0_26
BB0_16:
	ld	hl, L_.str.4
	jq	BB0_14
BB0_31:
	ld	bc, -649
	jq	BB0_20
BB0_11:
	ld	hl, L_.str.3
	jq	BB0_14
BB0_17:
	ld	bc, -649
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_fat_Close
	pop	hl
BB0_19:
	ld	bc, -661
BB0_20:
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_fat_Close
BB0_33:
	pop	hl
	ld	a, 1
	jq	BB0_34
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	___main_argc_argv
___main_argc_argv:
	ld	hl, -329
	call	__frameset
	ld	hl, ___main_argc_argv.global+3
	xor	a, a
	ld	iy, 0
	push	ix
	ld	bc, -302
	add	ix, bc
	lea	de, ix
	pop	ix
	push	ix
	ld	bc, -305
	add	ix, bc
	ld	(ix), de
	pop	ix
	ld	(___main_argc_argv.global+3), a
	push	hl
	pop	de
	inc	de
	ld	bc, 1023
	ldir
	ld	hl, 36104
BB1_1:
	ld	(___main_argc_argv.global), iy
	push	hl
	push	iy
	ld	hl, ___main_argc_argv.global
	push	hl
	ld	hl, _handleUsbEvent
	push	hl
	call	_usb_Init
	pop	de
	pop	de
	pop	de
	pop	de
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	de, 0
	jq	nz, BB1_2
BB1_5:
	ld	bc, (___main_argc_argv.global)
	push	de
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB1_9
	push	bc
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB1_9
	call	_os_GetCSC
	or	a, a
	jq	nz, BB1_8
	call	_usb_WaitForInterrupt
	push	hl
	pop	de
	jq	BB1_5
BB1_9:
	ld	(ix - 3), de
	ld	de, -308
	lea	hl, ix
	add	hl, de
	ld	(hl), bc
	ld	de, (ix - 3)
	push	de
	pop	hl
	ld	bc, 100
	or	a, a
	sbc	hl, bc
	ld	iy, 0
	ld	hl, 36104
	jq	z, BB1_1
	ex	de, hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB1_12
	ld	hl, L_.str.9
	jq	BB1_3
BB1_2:
	ld	hl, L_.str.7
BB1_3:
	push	hl
	call	_gui_PrintLine
BB1_59:
	pop	hl
	call	_usb_Cleanup
	or	a, a
	sbc	hl, hl
	ld	sp, ix
	pop	ix
	ret
BB1_12:
	ld	bc, -308
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	hl, ___main_argc_argv.global+3
	push	hl
	call	_msd_Open
	pop	de
	pop	de
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB1_13
	ld	hl, L_.str.11
	push	hl
	call	_gui_PrintLine
	pop	hl
	pea	ix - 14
	ld	hl, ___main_argc_argv.global+3
	push	hl
	call	_msd_Info
	pop	de
	pop	de
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB1_15
	ld	hl, 10
	push	hl
	ld	hl, ___main_argc_argv.partitions
	push	hl
	ld	hl, ___main_argc_argv.global+3
	push	hl
	call	_msd_FindPartitions
	ld	l, a
	pop	de
	pop	de
	pop	de
	or	a, a
	jq	nz, BB1_19
	ld	hl, L_.str.13
	jq	BB1_16
BB1_8:
	ld	hl, L_.str.8
	jq	BB1_3
BB1_13:
	ld	hl, L_.str.10
	jq	BB1_3
BB1_15:
	ld	hl, L_.str.12
BB1_16:
	push	hl
	call	_gui_PrintLine
	jq	BB1_58
BB1_19:
	ld	de, _msd_Read
	ld	(___main_argc_argv.fat), de
	ld	de, _msd_Write
	ld	(___main_argc_argv.fat+3), de
	ld	de, ___main_argc_argv.global+3
	ld	(___main_argc_argv.fat+6), de
	ld	de, 0
	ld	e, l
	ld	bc, -314
	lea	hl, ix
	add	hl, bc
	ld	(hl), de
	or	a, a
	sbc	hl, hl
	ex	de, hl
	ld	iy, ___main_argc_argv.partitions+4
BB1_20:
	ld	bc, -311
	lea	hl, ix
	add	hl, bc
	ld	(hl), iy
	push	ix
	ld	bc, -308
	add	ix, bc
	ld	(ix), de
	pop	ix
	ld	hl, (iy - 4)
	ld	a, (iy - 1)
	ld	(___main_argc_argv.fat+9), hl
	ld	(___main_argc_argv.fat+12), a
	ld	hl, (iy)
	ld	a, (iy + 3)
	ld	(___main_argc_argv.fat+13), hl
	ld	(___main_argc_argv.fat+16), a
	ld	hl, ___main_argc_argv.fat
	push	hl
	call	_fat_Init
	pop	de
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB1_23
	ld	bc, -308
	lea	hl, ix
	add	hl, bc
	ld	de, (hl)
	inc	de
	ld	bc, -311
	lea	iy, ix
	add	iy, bc
	ld	iy, (iy)
	lea	iy, iy + 8
	push	ix
	ld	bc, -314
	add	ix, bc
	ld	hl, (ix)
	pop	ix
	or	a, a
	sbc	hl, de
	jq	nz, BB1_20
	ld	hl, L_.str.15
	push	hl
	call	_gui_PrintLine
	jq	BB1_56
BB1_23:
	ld	hl, L_.str.14
	push	hl
	call	_gui_Print
	pop	hl
	ld	bc, -308
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_gui_PrintInt
	pop	hl
	call	_gui_NewLine
	ld	iy, (ix + 9)
	ld	hl, (iy + 3)
	ld	de, L_.str.16
	push	de
	push	hl
	call	_strcmp
	pop	de
	pop	de
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB1_28
	ld	hl, L_.str.17
	push	hl
	call	_gui_PrintLine
	pop	hl
	ld	iy, (ix + 9)
	lea	iy, iy + 9
	or	a, a
	sbc	hl, hl
BB1_25:
	ld	de, 2
	add	hl, de
	push	ix
	ld	bc, -305
	add	ix, bc
	ld	(ix), hl
	pop	ix
	ld	de, (ix + 6)
	or	a, a
	sbc	hl, de
	call	__setflag
	jq	p, BB1_57
	lea	hl, iy + 6
	push	ix
	ld	bc, -308
	add	ix, bc
	ld	(ix), hl
	pop	ix
	ld	hl, (iy - 3)
	ld	de, (iy)
	push	de
	push	hl
	ld	hl, ___main_argc_argv.fat
	push	hl
	call	_transfer_file
	pop	hl
	pop	hl
	pop	hl
	bit	0, a
	ld	bc, -308
	lea	hl, ix
	push	af
	add	hl, bc
	pop	af
	ld	iy, (hl)
	push	ix
	ld	bc, -305
	push	af
	add	ix, bc
	pop	af
	ld	hl, (ix)
	pop	ix
	jq	nz, BB1_25
	ld	hl, L_.str.18
	push	hl
	call	_gui_PrintLine
	pop	hl
	call	_sys_WaitKeyCycle
	jq	BB1_57
BB1_28:
	ld	hl, 14
	push	hl
	call	_sys_Malloc
	push	hl
	pop	iy
	pop	hl
	ld	de, -323
	lea	hl, ix
	add	hl, de
	ld	(hl), iy
	ld	(iy + 13), 0
	ld	c, 0
	or	a, a
	sbc	hl, hl
	ld	de, -320
	lea	iy, ix
	add	iy, de
	ld	(iy), hl
BB1_29:
	ld	de, -311
	lea	hl, ix
	add	hl, de
	ld	(hl), c
	ld	hl, L_.str.20
	push	hl
	call	_gui_DrawConsoleWindow
	pop	hl
	ld	bc, -320
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	hl, 16
	push	hl
	ld	bc, -305
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	hl, 2
	push	hl
	ld	hl, L_.str.19
	push	hl
	ld	hl, ___main_argc_argv.fat
	push	hl
	call	_fat_DirList
	push	hl
	pop	bc
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	push	bc
	pop	hl
	ld	de, 16
	or	a, a
	sbc	hl, de
	ld	de, -326
	lea	hl, ix
	push	af
	add	hl, de
	pop	af
	ld	(hl), bc
	jq	c, BB1_31
	ld	bc, 16
BB1_31:
	ld	de, -314
	lea	hl, ix
	add	hl, de
	ld	(hl), bc
	ld	a, 1
	ld	l, a
BB1_32:
	ld	de, 0
	ld	bc, -308
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	ld	a, l
	dec	a
	push	de
	pop	iy
	ld	e, a
	push	de
	pop	hl
	ld	(ix - 3), de
	push	ix
	ld	de, -314
	add	ix, de
	ld	bc, (ix)
	pop	ix
	or	a, a
	sbc	hl, bc
	ld	de, (ix - 3)
	jq	nc, BB1_34
	ld	bc, -308
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	hl, 2
	push	hl
	ld	bc, -317
	lea	hl, ix
	add	hl, bc
	ld	(hl), de
	call	_bosgfx_SetTextPos
	pop	hl
	pop	hl
	ld	de, -317
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	ld	bc, 18
	call	__imulu
	push	hl
	pop	de
	ld	(ix - 3), bc
	ld	bc, -305
	lea	iy, ix
	add	iy, bc
	ld	iy, (iy)
	add	iy, de
	bit	4, (iy + 13)
	ld	bc, (ix - 3)
	ld	hl, 47
	push	hl
	call	nz, _gui_PrintChar
	pop	hl
	ld	de, -317
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	ld	bc, 18
	call	__imulu
	push	hl
	pop	de
	ld	(ix - 3), bc
	ld	bc, -305
	lea	iy, ix
	add	iy, bc
	ld	hl, (iy)
	add	hl, de
	push	ix
	ld	bc, -323
	add	ix, bc
	ld	iy, (ix)
	pop	ix
	lea	de, iy
	ld	bc, (ix - 3)
	ld	bc, 13
	ldir
	push	iy
	call	_gui_Print
	pop	hl
	ld	bc, -308
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	inc	l
	jq	BB1_32
BB1_34:
	lea	hl, iy
	push	ix
	ld	bc, -311
	add	ix, bc
	ld	a, (ix)
	pop	ix
	ld	l, a
	push	ix
	ld	bc, -314
	add	ix, bc
	ld	(ix), hl
	pop	ix
	inc	l
	push	ix
	ld	bc, -317
	add	ix, bc
	ld	(ix), hl
	pop	ix
	push	hl
	push	iy
	call	_bosgfx_SetTextPos
	pop	hl
	pop	hl
	ld	hl, L_.str.21
	push	hl
	call	_gui_PrintLine
	pop	hl
	call	_sys_WaitKeyCycle
	ld	bc, -308
	lea	hl, ix
	add	hl, bc
	ld	(hl), a
	call	_usb_HandleEvents
	ld	de, -308
	lea	hl, ix
	add	hl, de
	ld	b, (hl)
	ld	a, b
	cp	a, 1
	jq	nz, BB1_35
	ld	de, -311
	lea	hl, ix
	add	hl, de
	ld	a, (hl)
	cp	a, 16
	ld	de, -320
	lea	iy, ix
	push	af
	add	iy, de
	pop	af
	ld	iy, (iy)
	jq	nc, BB1_46
	ld	de, -314
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	ld	(ix - 3), bc
	push	ix
	ld	bc, -326
	add	ix, bc
	ld	de, (ix)
	pop	ix
	or	a, a
	sbc	hl, de
	ld	bc, (ix - 3)
	jq	nc, BB1_46
	ld	de, -317
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	ld	c, l
	jq	BB1_54
BB1_35:
	ld	a, b
	cp	a, 4
	ld	de, 0
	ld	(ix - 3), bc
	ld	bc, -320
	lea	hl, ix
	push	af
	add	hl, bc
	pop	af
	ld	hl, (hl)
	ld	bc, (ix - 3)
	jq	nz, BB1_36
	ld	(ix - 3), de
	ld	de, -311
	lea	iy, ix
	add	iy, de
	ld	c, (iy)
	ld	a, c
	or	a, a
	ld	de, (ix - 3)
	jq	nz, BB1_39
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB1_42
	dec	hl
	ex	de, hl
BB1_42:
	ld	c, 0
	ld	(ix - 3), bc
	ld	bc, -320
	lea	hl, ix
	add	hl, bc
	ld	(hl), de
	ld	bc, (ix - 3)
	jq	BB1_54
BB1_46:
	lea	hl, iy
	ld	(ix - 3), bc
	push	ix
	ld	bc, -326
	add	ix, bc
	ld	de, (ix)
	pop	ix
	or	a, a
	sbc	hl, de
	ld	a, 1
	ld	bc, (ix - 3)
	jq	c, BB1_48
	ld	a, 0
BB1_48:
	and	a, 1
	ld	de, 0
	ld	e, a
	add	iy, de
	ld	de, -320
	lea	hl, ix
	add	hl, de
	ld	(hl), iy
	ld	de, -311
	lea	iy, ix
	add	iy, de
	ld	c, (iy)
	jq	BB1_54
BB1_36:
	ld	a, b
	cp	a, 9
	jq	nz, BB1_37
	ld	hl, 256
	push	hl
	call	_sys_Malloc
	ld	bc, -317
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	pop	hl
	ld	hl, L_.str.22
	push	hl
	call	_gui_DrawConsoleWindow
	pop	hl
	ld	bc, -317
	lea	hl, ix
	add	hl, bc
	ld	de, (hl)
	inc	de
	ld	hl, 254
	push	hl
	ld	bc, -326
	lea	hl, ix
	add	hl, bc
	ld	(hl), de
	push	de
	call	_gui_Input
	ld	bc, -317
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
	pop	hl
	pop	hl
	ld	a, (iy + 1)
	or	a, a
	jq	z, BB1_53
	ld	de, -314
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	ld	bc, 18
	call	__imulu
	push	hl
	pop	de
	ld	(ix - 3), bc
	ld	bc, -305
	lea	iy, ix
	add	iy, bc
	ld	hl, (iy)
	add	hl, de
	push	ix
	ld	bc, -323
	add	ix, bc
	ld	iy, (ix)
	pop	ix
	lea	de, iy
	ld	bc, (ix - 3)
	ld	bc, 13
	ldir
	push	iy
	ld	hl, L_.str.19
	push	hl
	call	_fs_JoinPath
	ld	bc, -329
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	pop	de
	pop	de
	push	hl
	ld	hl, L_.str.23
	push	hl
	call	_fs_JoinPath
	ld	bc, -314
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	pop	hl
	pop	hl
	ld	bc, -329
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_sys_Free
	pop	hl
	ld	bc, -326
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	bc, -314
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	hl, ___main_argc_argv.fat
	push	hl
	call	_transfer_file
	pop	hl
	pop	hl
	pop	hl
	bit	0, a
	ld	hl, L_.str.24
	jq	nz, BB1_52
	ld	hl, L_.str.18
BB1_52:
	push	hl
	call	_gui_PrintLine
	pop	hl
	call	_sys_WaitKeyCycle
	ld	bc, -317
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
BB1_53:
	push	iy
	call	_sys_Free
	pop	hl
	ld	de, -311
	lea	hl, ix
	add	hl, de
	ld	c, (hl)
	ld	de, -308
	lea	iy, ix
	add	iy, de
	ld	b, (iy)
	jq	BB1_54
BB1_39:
	dec	c
	jq	BB1_54
BB1_37:
	ld	de, -311
	lea	hl, ix
	add	hl, de
	ld	c, (hl)
BB1_54:
	ld	a, b
	cp	a, 15
	jq	nz, BB1_29
	ld	bc, -323
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_sys_Free
BB1_56:
	pop	hl
BB1_57:
	ld	hl, ___main_argc_argv.fat
	push	hl
	call	_fat_Deinit
BB1_58:
	pop	hl
	ld	hl, ___main_argc_argv.global+3
	push	hl
	call	_msd_Close
	jq	BB1_59
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	private	_handleUsbEvent
_handleUsbEvent:
	call	__frameset0
	ld	iy, 0
	ld	de, 1
	ld	hl, (ix + 6)
	or	a, a
	sbc	hl, de
	push	hl
	pop	de
	ld	bc, 4
	or	a, a
	sbc	hl, bc
	jq	nc, BB2_7
	ld	bc, (ix + 9)
	ld	iy, (ix + 12)
	ld	hl, LJTI2_0
	add	hl, de
	add	hl, de
	add	hl, de
	ld	hl, (hl)
	jp	(hl)
BB2_2:
	ld	hl, L_.str.25
	push	hl
	call	_gui_PrintLine
	ld	iy, (ix + 12)
	pop	hl
	ld	hl, (iy)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	pea	iy + 3
	call	nz, _msd_Close
	pop	hl
	ld	hl, (ix + 12)
	ld	de, 0
	ld	(hl), de
	ld	iy, 0
	jq	BB2_7
BB2_5:
	ld	hl, L_.str.28
	push	hl
	call	_gui_PrintLine
	ld	iy, 100
	jq	BB2_6
BB2_4:
	ld	hl, L_.str.27
	ld	(iy), bc
	push	hl
	call	_gui_PrintLine
	ld	iy, 0
	jq	BB2_6
BB2_3:
	ld	hl, L_.str.26
	push	hl
	call	_gui_PrintLine
	pop	hl
	ld	hl, (ix + 9)
	push	hl
	call	_usb_ResetDevice
	push	hl
	pop	iy
BB2_6:
	pop	hl
BB2_7:
	lea	hl, iy
	pop	ix
	ret
	section	.text,"ax",@progbits
	section	.rodata,"a",@progbits
lJTI2_0:
	private	LJTI2_0
LJTI2_0:
	dl	BB2_2
	dl	BB2_3
	dl	BB2_5
	dl	BB2_4

	section	.rodata,"a",@progbits
	private	L_.str
L_.str:
	db	"Transferring ", 0

	section	.rodata,"a",@progbits
	private	L_.str.1
L_.str.1:
	db	" to ", 0

	section	.rodata,"a",@progbits
	private	L_.str.2
L_.str.2:
	db	"source file not found!", 0

	section	.rodata,"a",@progbits
	private	L_.str.3
L_.str.3:
	db	"Error reading source file!", 0

	section	.rodata,"a",@progbits
	private	L_.str.4
L_.str.4:
	db	"Error writing destination file!", 0

	section	.rodata,"a",@progbits
	private	L_.str.5
L_.str.5:
	db	"File too large for internal filesystem!", 0

	section	.rodata,"a",@progbits
	private	L_.str.6
L_.str.6:
	db	"Failed to create destination file!", 0

	section	.bss,"aw",@nobits
	private	___main_argc_argv.partitions
___main_argc_argv.partitions:
	rb	80

	section	.bss,"aw",@nobits
	private	___main_argc_argv.global
___main_argc_argv.global:
	rb	1027

	section	.bss,"aw",@nobits
	private	___main_argc_argv.fat
___main_argc_argv.fat:
	rb	1041

	section	.rodata,"a",@progbits
	private	L_.str.7
L_.str.7:
	db	"usb init error.", 0

	section	.rodata,"a",@progbits
	private	L_.str.8
L_.str.8:
	db	"operation cancelled.", 0

	section	.rodata,"a",@progbits
	private	L_.str.9
L_.str.9:
	db	"usb enable error.", 0

	section	.rodata,"a",@progbits
	private	L_.str.10
L_.str.10:
	db	"failed opening msd", 0

	section	.rodata,"a",@progbits
	private	L_.str.11
L_.str.11:
	db	"opened msd", 0

	section	.rodata,"a",@progbits
	private	L_.str.12
L_.str.12:
	db	"error getting msd info", 0

	section	.rodata,"a",@progbits
	private	L_.str.13
L_.str.13:
	db	"no paritions found", 0

	section	.rodata,"a",@progbits
	private	L_.str.14
L_.str.14:
	db	"opened fat partition", 0

	section	.rodata,"a",@progbits
	private	L_.str.15
L_.str.15:
	db	"no fat32 paritions found", 0

	section	.rodata,"a",@progbits
	private	L_.str.16
L_.str.16:
	db	"-t", 0

	section	.rodata,"a",@progbits
	private	L_.str.17
L_.str.17:
	db	"Transferring Files", 0

	section	.rodata,"a",@progbits
	private	L_.str.18
L_.str.18:
	db	"Failed to transfer files.", 0

	section	.rodata,"a",@progbits
	private	L_.str.19
L_.str.19:
	db	"/", 0

	section	.rodata,"a",@progbits
	private	L_.str.20
L_.str.20:
	db	"MSD/", 0

	section	.rodata,"a",@progbits
	private	L_.str.21
L_.str.21:
	db	">", 0

	section	.rodata,"a",@progbits
	private	L_.str.22
L_.str.22:
	db	"File to write:", 0

	section	.rodata,"a",@progbits
	private	L_.str.23
L_.str.23:
	db	"*", 0

	section	.rodata,"a",@progbits
	private	L_.str.24
L_.str.24:
	db	"Transfer completed successfuly.", 0

	section	.rodata,"a",@progbits
	private	L_.str.25
L_.str.25:
	db	"usb device disconnected", 0

	section	.rodata,"a",@progbits
	private	L_.str.26
L_.str.26:
	db	"usb device connected", 0

	section	.rodata,"a",@progbits
	private	L_.str.27
L_.str.27:
	db	"usb device enabled", 0

	section	.rodata,"a",@progbits
	private	L_.str.28
L_.str.28:
	db	"usb device disabled", 0

	ident	"clang version 14.0.0 (https://github.com/jacobly0/llvm-project a139def90d26173f771eb1eca797633d1fbb2797)"
	extern	__Unwind_SjLj_Register
	extern	_bosgfx_SetTextPos
	extern	_fs_WriteNewFile
	extern	_usb_WaitForInterrupt
	extern	_fat_GetSize
	extern	_usb_ResetDevice
	extern	_fat_Close
	extern	_msd_Read
	extern	_fs_GetFDPtr
	extern	_gui_PrintInt
	extern	_fs_OpenFile
	extern	__ladd
	extern	_msd_Open
	extern	_strlen
	extern	__setflag
	extern	_fat_Init
	extern	_msd_FindPartitions
	extern	_fs_JoinPath
	extern	_fat_Read
	extern	_fat_Deinit
	extern	_fs_ParentDir
	extern	_sys_WaitKeyCycle
	extern	_sys_Free
	extern	_fat_Open
	extern	_fat_Delete
	extern	_gui_Input
	extern	_gui_DrawConsoleWindow
	extern	_os_GetCSC
	extern	_usb_Cleanup
	extern	_msd_Close
	extern	_fs_WriteRaw
	extern	_fat_Create
	extern	__frameset
	extern	_fat_SetSize
	extern	_fat_Write
	extern	_fs_CreateFile
	extern	_gui_Print
	extern	_gui_PrintLine
	extern	_strcmp
	extern	_fs_GetFDLen
	extern	__ishru
	extern	_usb_HandleEvents
	extern	_gui_NewLine
	extern	_sys_Malloc
	extern	__Unwind_SjLj_Unregister
	extern	__imulu
	extern	_msd_Info
	extern	_fat_DirList
	extern	__lcmpu
	extern	__frameset0
	extern	_msd_Write
	extern	_gui_PrintChar
	extern	_usb_Init
