	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_checkIs8xVar
_checkIs8xVar:
	ld	hl, -3
	call	__frameset
	ld	hl, (ix + 6)
	push	hl
	call	_fs_BaseName
	ld	(ix - 3), hl
	pop	de
	push	hl
	call	_sys_Free
	pop	hl
	ld	hl, 46
	push	hl
	ld	hl, (ix - 3)
	push	hl
	call	_strchr
	pop	de
	pop	de
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB0_4
	ld	de, L_.str
	ld	bc, 3
	push	bc
	push	de
	ld	(ix - 3), hl
	push	hl
	call	_strncmp
	pop	de
	pop	de
	pop	de
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB0_3
	ld	a, 1
	jq	BB0_5
BB0_3:
	ld	hl, L_.str.1
	ld	de, 3
	push	de
	push	hl
	ld	hl, (ix - 3)
	push	hl
	call	_strncmp
	pop	de
	pop	de
	pop	de
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	a, 1
	jq	z, BB0_5
BB0_4:
	xor	a, a
BB0_5:
	pop	hl
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_transfer_file
_transfer_file:
	ld	hl, -673
	call	__frameset
	ld	hl, L_.str.2
	ld	de, 0
	ld	bc, -652
	lea	iy, ix
	add	iy, bc
	ld	(iy), de
	push	hl
	call	_gui_Print
	pop	hl
	ld	hl, (ix + 9)
	push	hl
	call	_gui_Print
	pop	hl
	ld	hl, L_.str.3
	push	hl
	call	_gui_Print
	pop	hl
	ld	hl, (ix + 12)
	push	hl
	call	_gui_Print
	pop	hl
	call	_gui_NewLine
	bit	0, (ix + 15)
	jq	z, BB1_1
	ld	hl, (ix + 12)
	push	hl
	call	_fs_ParentDir
	pop	de
	ld	bc, -655
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	push	hl
	call	_strlen
	ld	bc, -649
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	pop	hl
	push	hl
	call	_fs_GetFDLen
	ld	bc, -652
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	pop	hl
	push	hl
	call	_fs_GetFDPtr
	push	hl
	pop	de
	pop	hl
	ld	bc, -652
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	bc, 511
	call	__iand
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	(ix - 3), bc
	ld	bc, -664
	lea	iy, ix
	push	af
	add	iy, bc
	pop	af
	ld	(iy), de
	ld	bc, (ix - 3)
	jq	nz, BB1_7
	ld	a, 0
	jq	BB1_9
BB1_1:
	ld	bc, -646
	lea	iy, ix
	add	iy, bc
	lea	hl, ix - 70
	push	ix
	ld	bc, -658
	add	ix, bc
	ld	(ix), iy
	pop	ix
	lea	de, iy
	ld	bc, -655
	lea	iy, ix
	add	iy, bc
	ld	(iy), de
	ld	iy, (ix + 9)
	push	ix
	ld	bc, -649
	add	ix, bc
	ld	(ix), hl
	pop	ix
BB1_2:
	ld	e, (iy)
	ld	a, e
	or	a, a
	jq	z, BB1_3
	ld	a, e
	rlc	a
	sbc	hl, hl
	ld	l, e
	ld	bc, -97
	add	hl, bc
	ld	bc, 26
	or	a, a
	sbc	hl, bc
	jq	nc, BB1_22
	ld	a, e
	xor	a, 32
	ld	(iy), a
BB1_22:
	inc	iy
	ld	bc, -649
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	jq	BB1_2
BB1_3:
	ld	de, (ix + 9)
	push	de
	ld	de, (ix + 6)
	push	de
	push	hl
	call	_fat_Open
	pop	de
	pop	de
	pop	de
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB1_12
	ld	bc, -649
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_fat_GetSize
	push	hl
	pop	bc
	ld	a, e
	pop	hl
	ld	hl, 65535
	ld	e, 0
	ld	(ix - 3), de
	ld	de, -661
	lea	iy, ix
	add	iy, de
	ld	(iy), bc
	ld	de, (ix - 3)
	call	__lcmpu
	jq	nc, BB1_23
BB1_5:
	ld	bc, -649
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_fat_Close
	pop	hl
	ld	hl, L_.str.5
	jq	BB1_13
BB1_7:
	ld	a, 1
BB1_9:
	ld	bc, -134
	lea	hl, ix
	add	hl, bc
	ld	bc, -661
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	ld	bc, -649
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	inc	hl
	push	ix
	add	ix, bc
	ld	(ix), hl
	pop	ix
	and	a, 1
	or	a, a
	sbc	hl, hl
	ld	l, a
	push	ix
	ld	bc, -658
	add	ix, bc
	ld	(ix), hl
	pop	ix
	ld	bc, -655
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
BB1_10:
	ld	e, (iy)
	ld	a, e
	or	a, a
	jq	z, BB1_11
	ld	a, e
	rlc	a
	sbc	hl, hl
	ld	l, e
	ld	bc, -97
	add	hl, bc
	ld	bc, 26
	or	a, a
	sbc	hl, bc
	jq	nc, BB1_16
	ld	a, e
	xor	a, 32
	ld	(iy), a
BB1_16:
	inc	iy
	jq	BB1_10
BB1_11:
	ld	c, 9
	ld	de, -652
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	call	__ishru
	ld	(ix - 3), bc
	ld	bc, -658
	lea	iy, ix
	add	iy, bc
	ld	de, (iy)
	add	hl, de
	push	ix
	ld	de, -652
	add	ix, de
	ld	(ix), hl
	pop	ix
	ld	hl, (ix + 9)
	push	hl
	ld	bc, (ix - 3)
	call	_fs_OpenFile
	pop	de
	ld	de, -1
	or	a, a
	sbc	hl, de
	jq	nz, BB1_17
BB1_12:
	ld	hl, L_.str.4
	jq	BB1_13
BB1_17:
	ld	bc, (ix + 12)
	push	bc
	pop	hl
	ld	(ix - 3), bc
	ld	bc, -649
	lea	iy, ix
	add	iy, bc
	ld	de, (iy)
	add	hl, de
	push	ix
	ld	de, -649
	add	ix, de
	ld	(ix), hl
	pop	ix
	ld	bc, (ix - 3)
	push	bc
	ld	hl, (ix + 6)
	push	hl
	call	_fat_Delete
	pop	hl
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	bc, -649
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	bc, -655
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	hl, (ix + 6)
	push	hl
	call	_fat_Create
	pop	de
	pop	de
	pop	de
	pop	de
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB1_46
	ld	hl, (ix + 12)
	push	hl
	ld	hl, (ix + 6)
	push	hl
	ld	bc, -661
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_fat_Open
	pop	de
	pop	de
	pop	de
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB1_46
	ld	bc, -652
	lea	hl, ix
	add	hl, bc
	ld	de, (hl)
	ld	bc, -649
	lea	iy, ix
	add	iy, bc
	ld	(iy), de
	push	ix
	ld	bc, -664
	add	ix, bc
	ld	hl, (ix)
	pop	ix
	push	hl
	push	de
	ld	bc, -661
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_fat_Write
	ld	bc, -652
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	pop	hl
	pop	hl
	pop	hl
	ld	bc, -661
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_fat_Close
	pop	hl
	ld	bc, -652
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	bc, -649
	lea	iy, ix
	add	iy, bc
	ld	de, (iy)
	or	a, a
	sbc	hl, de
	ld	a, 1
	jq	z, BB1_52
BB1_50:
	ld	hl, L_.str.11
	jq	BB1_13
BB1_23:
	ld	bc, -664
	lea	hl, ix
	add	hl, bc
	ld	(hl), a
	ld	hl, (ix + 9)
	push	hl
	call	_checkIs8xVar
	pop	hl
	ld	l, 1
	xor	a, l
	bit	0, a
	jq	nz, BB1_45
	ld	bc, -655
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	hl, 1
	push	hl
	ld	bc, -649
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_fat_Read
	pop	de
	pop	de
	pop	de
	ld	de, 1
	or	a, a
	sbc	hl, de
	jq	nz, BB1_44
	ld	hl, L_.str.6
	push	hl
	ld	bc, -655
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_strcmp
	pop	de
	pop	de
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	bc, -655
	lea	iy, ix
	push	af
	add	iy, bc
	pop	af
	ld	iy, (iy)
	jq	nz, BB1_51
	lea	de, iy + 60
	ld	bc, -667
	lea	hl, ix
	add	hl, bc
	ld	(hl), de
	ld	bc, -658
	lea	iy, ix
	add	iy, bc
	ld	iy, (iy)
	ld	a, (iy + 59)
	ld	l, a
	push	hl
	push	de
	call	_TIVarToPath
	pop	de
	pop	de
	ld	bc, -658
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	push	hl
	ld	hl, L_.str.7
	push	hl
	call	_fs_JoinPath
	ld	bc, -652
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	pop	hl
	pop	hl
	ld	bc, -667
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_strlen
	pop	de
	ld	a, l
	and	a, -8
	ld	de, 4
	add	hl, de
	ld	bc, 255
	call	__iand
	or	a, a
	jq	z, BB1_28
	ld	hl, 11
BB1_28:
	ld	bc, -667
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	ld	de, 64
	add	hl, de
	ex	de, hl
	ld	bc, -655
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
	add	iy, de
	ld	hl, (iy)
	ld	de, 0
	ld	e, l
	ld	d, h
	ld	bc, -670
	lea	hl, ix
	add	hl, bc
	ld	(hl), de
	ld	bc, -658
	lea	iy, ix
	add	iy, bc
	ld	hl, (iy)
	push	hl
	call	_sys_Free
	pop	hl
	ld	bc, -667
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
	push	ix
	ld	bc, -670
	add	ix, bc
	ld	de, (ix)
	pop	ix
	add	iy, de
	ld	de, 65535
	lea	hl, iy
	or	a, a
	sbc	hl, de
	jq	nc, BB1_5
	ld	hl, L_.str.8
	push	hl
	ld	bc, -658
	lea	hl, ix
	add	hl, bc
	ld	(hl), iy
	call	_gui_Print
	pop	hl
	ld	bc, -652
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_gui_PrintLine
	pop	hl
	ld	bc, -658
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	inc	hl
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	bc, -652
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_fs_CreateFile
	ld	bc, -658
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	pop	hl
	pop	hl
	pop	hl
	ld	bc, -652
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_sys_Free
	pop	hl
	ld	bc, -667
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	a, l
	add	a, 2
	ld	l, a
	ld	de, 0
	push	de
	ld	bc, -658
	lea	iy, ix
	add	iy, bc
	ld	de, (iy)
	push	de
	push	hl
	call	_fs_WriteByte
	pop	de
	pop	de
	pop	de
	ld	de, -1
	or	a, a
	sbc	hl, de
	ld	bc, -655
	lea	hl, ix
	push	af
	add	hl, bc
	pop	af
	ld	iy, (hl)
	jq	z, BB1_50
	ld	bc, -667
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	de, -2
	add	hl, de
	ld	de, 1
	push	de
	ld	(ix - 3), de
	push	ix
	ld	de, -658
	add	ix, de
	ld	bc, (ix)
	pop	ix
	push	bc
	ld	de, (ix - 3)
	push	de
	push	hl
	pea	iy + 59
	call	_fs_WriteRaw
	ld	de, -661
	lea	iy, ix
	add	iy, de
	ld	bc, (iy)
	pop	de
	pop	de
	pop	de
	pop	de
	pop	de
	ld	de, -1
	or	a, a
	sbc	hl, de
	jq	z, BB1_50
	ld	de, -667
	lea	hl, ix
	add	hl, de
	ld	iy, (hl)
	push	bc
	pop	hl
	push	ix
	ld	bc, -664
	add	ix, bc
	ld	e, (ix)
	pop	ix
	ld	bc, 513
	xor	a, a
	call	__lcmpu
	jq	c, BB1_32
	ld	a, 0
	jq	BB1_34
BB1_45:
	ld	bc, -661
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	hl, (ix + 12)
	push	hl
	call	_fs_CreateFile
	pop	de
	pop	de
	pop	de
	ld	bc, -658
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	ld	de, -1
	or	a, a
	sbc	hl, de
	ld	hl, 0
	push	hl
	pop	bc
	jq	nz, BB1_41
BB1_46:
	ld	hl, L_.str.9
BB1_13:
	push	hl
	call	_gui_PrintLine
	pop	hl
	xor	a, a
BB1_52:
	ld	sp, ix
	pop	ix
	ret
BB1_32:
	ld	a, 1
BB1_34:
	ld	bc, -1
	bit	0, a
	ld	de, -661
	lea	hl, ix
	push	af
	add	hl, de
	pop	af
	ld	hl, (hl)
	ld	de, 512
	jq	nz, BB1_36
	push	de
	pop	hl
BB1_36:
	bit	0, a
	jq	nz, BB1_38
	push	de
	pop	bc
BB1_38:
	push	ix
	ld	de, -670
	add	ix, de
	ld	(ix), bc
	pop	ix
	lea	bc, iy
	ld	de, 63
	add	iy, de
	lea	de, iy
	or	a, a
	sbc	hl, de
	ld	(ix - 3), bc
	ld	bc, -652
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	push	ix
	ld	bc, -655
	add	ix, bc
	ld	iy, (ix)
	pop	ix
	add	iy, de
	ld	bc, (ix - 3)
	dec	bc
	push	ix
	ld	de, -667
	add	ix, de
	ld	(ix), bc
	pop	ix
	push	bc
	push	ix
	ld	bc, -658
	add	ix, bc
	ld	hl, (ix)
	pop	ix
	push	hl
	ld	hl, 1
	push	hl
	ld	bc, -652
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	push	iy
	call	_fs_WriteRaw
	pop	de
	pop	de
	pop	de
	pop	de
	pop	de
	ld	bc, -652
	lea	iy, ix
	add	iy, bc
	ld	iy, (iy)
	push	ix
	ld	bc, -667
	add	ix, bc
	ld	de, (ix)
	pop	ix
	add	iy, de
	push	ix
	ld	bc, -652
	add	ix, bc
	ld	(ix), iy
	pop	ix
	ld	de, -1
	or	a, a
	sbc	hl, de
	jq	z, BB1_50
	ld	bc, -658
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	de, -1
	or	a, a
	sbc	hl, de
	jq	z, BB1_46
	ld	bc, -661
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	bc, -664
	lea	iy, ix
	add	iy, bc
	ld	e, (iy)
	ld	bc, 513
	xor	a, a
	call	__lcmpu
	ld	(ix - 3), de
	push	ix
	ld	de, -670
	push	af
	add	ix, de
	pop	af
	ld	bc, (ix)
	pop	ix
	ld	de, (ix - 3)
	jq	nc, BB1_41
BB1_51:
	ld	bc, -649
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_fat_Close
	pop	hl
	ld	a, 1
	jq	BB1_52
BB1_41:
	ld	(ix - 3), bc
	ld	bc, -661
	lea	hl, ix
	add	hl, bc
	ld	de, (hl)
	push	de
	pop	hl
	ld	bc, (ix - 3)
	or	a, a
	sbc	hl, bc
	ld	(ix - 3), de
	ld	de, -667
	lea	iy, ix
	add	iy, de
	ld	(iy), hl
	push	bc
	pop	hl
	ld	de, (ix - 3)
BB1_42:
	ld	bc, -670
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	or	a, a
	sbc	hl, de
	call	__setflag
	jq	p, BB1_51
	ld	bc, -655
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	hl, 1
	push	hl
	ld	bc, -649
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_fat_Read
	pop	de
	pop	de
	pop	de
	ld	de, 1
	or	a, a
	sbc	hl, de
	jq	nz, BB1_44
	ld	de, -670
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	push	hl
	pop	iy
	push	hl
	pop	bc
	ld	hl, 512
	ex	de, hl
	add	iy, de
	ld	(ix - 3), de
	ld	de, -673
	lea	hl, ix
	add	hl, de
	ld	(hl), iy
	push	bc
	pop	hl
	ld	de, (ix - 3)
	add	hl, de
	push	hl
	pop	bc
	push	bc
	pop	iy
	add	iy, iy
	sbc	hl, hl
	push	hl
	pop	de
	push	bc
	pop	hl
	ld	(ix - 3), de
	ld	de, -661
	lea	iy, ix
	add	iy, de
	ld	bc, (iy)
	push	ix
	ld	de, -664
	add	ix, de
	ld	a, (ix)
	pop	ix
	ld	de, (ix - 3)
	call	__lcmpu
	ld	hl, 512
	push	hl
	pop	bc
	jq	c, BB1_49
	ld	de, -667
	lea	hl, ix
	add	hl, de
	ld	bc, (hl)
BB1_49:
	ld	de, -652
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	push	hl
	ld	(ix - 3), bc
	ld	bc, -658
	lea	hl, ix
	add	hl, bc
	ld	de, (hl)
	push	de
	ld	de, 1
	push	de
	ld	bc, (ix - 3)
	push	bc
	ld	bc, -655
	lea	iy, ix
	add	iy, bc
	ld	hl, (iy)
	push	hl
	call	_fs_WriteRaw
	pop	de
	pop	de
	pop	de
	pop	de
	pop	de
	ld	de, 512
	ld	bc, -652
	lea	iy, ix
	add	iy, bc
	ld	iy, (iy)
	add	iy, de
	push	ix
	add	ix, bc
	ld	(ix), iy
	pop	ix
	ld	de, -512
	ld	bc, -667
	lea	iy, ix
	add	iy, bc
	ld	iy, (iy)
	add	iy, de
	push	ix
	add	ix, bc
	ld	(ix), iy
	pop	ix
	ld	de, -1
	or	a, a
	sbc	hl, de
	ld	bc, -673
	lea	hl, ix
	push	af
	add	hl, bc
	pop	af
	ld	hl, (hl)
	ld	bc, -661
	lea	iy, ix
	push	af
	add	iy, bc
	pop	af
	ld	de, (iy)
	jq	nz, BB1_42
	jq	BB1_50
BB1_44:
	ld	bc, -649
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_fat_Close
	pop	hl
	ld	hl, L_.str.10
	jq	BB1_13
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	___main_argc_argv
___main_argc_argv:
	ld	hl, -384
	call	__frameset
	ld	bc, -350
	lea	iy, ix
	add	iy, bc
	ld	hl, ___main_argc_argv.global+3
	xor	a, a
	lea	de, iy + 48
	push	ix
	ld	bc, -353
	add	ix, bc
	ld	(ix), de
	pop	ix
	lea	de, iy
	ld	bc, -356
	lea	iy, ix
	add	iy, bc
	ld	(iy), de
	ld	(___main_argc_argv.global+3), a
	push	hl
	pop	de
	inc	de
	ld	bc, 1023
	ldir
	ld	iy, 0
	ld	hl, 36104
BB2_1:
	ld	(___main_argc_argv.global), iy
	push	hl
	push	iy
	ld	hl, ___main_argc_argv.global
	push	hl
	ld	hl, _handleUsbEvent
	push	hl
	call	_usb_Init
	pop	de
	pop	de
	pop	de
	pop	de
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	de, 0
	jq	nz, BB2_2
BB2_5:
	ld	bc, (___main_argc_argv.global)
	push	de
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB2_9
	push	bc
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB2_9
	call	_os_GetCSC
	or	a, a
	jq	nz, BB2_8
	call	_usb_WaitForInterrupt
	push	hl
	pop	de
	jq	BB2_5
BB2_9:
	ld	(ix - 3), de
	ld	de, -359
	lea	hl, ix
	add	hl, de
	ld	(hl), bc
	ld	de, (ix - 3)
	push	de
	pop	hl
	ld	bc, 100
	or	a, a
	sbc	hl, bc
	ld	iy, 0
	ld	hl, 36104
	jq	z, BB2_1
	ex	de, hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB2_12
	ld	hl, L_.str.14
	jq	BB2_3
BB2_2:
	ld	hl, L_.str.12
BB2_3:
	push	hl
	call	_gui_PrintLine
BB2_94:
	pop	hl
	call	_usb_Cleanup
	or	a, a
	sbc	hl, hl
	ld	sp, ix
	pop	ix
	ret
BB2_12:
	ld	bc, -359
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	hl, ___main_argc_argv.global+3
	push	hl
	call	_msd_Open
	pop	de
	pop	de
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB2_13
	ld	hl, L_.str.16
	push	hl
	call	_gui_PrintLine
	pop	hl
	pea	ix - 14
	ld	hl, ___main_argc_argv.global+3
	push	hl
	call	_msd_Info
	pop	de
	pop	de
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB2_15
	ld	hl, 10
	push	hl
	ld	hl, ___main_argc_argv.partitions
	push	hl
	ld	hl, ___main_argc_argv.global+3
	push	hl
	call	_msd_FindPartitions
	ld	l, a
	pop	de
	pop	de
	pop	de
	or	a, a
	jq	nz, BB2_19
	ld	hl, L_.str.18
	jq	BB2_16
BB2_8:
	ld	hl, L_.str.13
	jq	BB2_3
BB2_13:
	ld	hl, L_.str.15
	jq	BB2_3
BB2_15:
	ld	hl, L_.str.17
BB2_16:
	push	hl
	call	_gui_PrintLine
	jq	BB2_93
BB2_19:
	ld	de, _msd_Read
	ld	(___main_argc_argv.fat), de
	ld	de, _msd_Write
	ld	(___main_argc_argv.fat+3), de
	ld	de, ___main_argc_argv.global+3
	ld	(___main_argc_argv.fat+6), de
	ld	de, 0
	ld	e, l
	ld	bc, -365
	lea	hl, ix
	add	hl, bc
	ld	(hl), de
	or	a, a
	sbc	hl, hl
	ex	de, hl
	ld	iy, ___main_argc_argv.partitions+4
BB2_20:
	ld	bc, -362
	lea	hl, ix
	add	hl, bc
	ld	(hl), iy
	push	ix
	ld	bc, -359
	add	ix, bc
	ld	(ix), de
	pop	ix
	ld	hl, (iy - 4)
	ld	a, (iy - 1)
	ld	(___main_argc_argv.fat+9), hl
	ld	(___main_argc_argv.fat+12), a
	ld	hl, (iy)
	ld	a, (iy + 3)
	ld	(___main_argc_argv.fat+13), hl
	ld	(___main_argc_argv.fat+16), a
	ld	hl, ___main_argc_argv.fat
	push	hl
	call	_fat_Init
	pop	de
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	z, BB2_23
	ld	bc, -359
	lea	hl, ix
	add	hl, bc
	ld	de, (hl)
	inc	de
	ld	bc, -362
	lea	iy, ix
	add	iy, bc
	ld	iy, (iy)
	lea	iy, iy + 8
	push	ix
	ld	bc, -365
	add	ix, bc
	ld	hl, (ix)
	pop	ix
	or	a, a
	sbc	hl, de
	jq	nz, BB2_20
	ld	hl, L_.str.20
	push	hl
	call	_gui_PrintLine
	jq	BB2_91
BB2_23:
	ld	hl, L_.str.19
	push	hl
	call	_gui_Print
	pop	hl
	ld	bc, -359
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_gui_PrintInt
	pop	hl
	call	_gui_NewLine
	ld	iy, (ix + 9)
	ld	hl, (iy + 3)
	ld	de, 2
	push	de
	ld	de, L_.str.21
	push	de
	push	hl
	call	_strncmp
	pop	de
	pop	de
	pop	de
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB2_28
	ld	hl, L_.str.22
	push	hl
	call	_gui_PrintLine
	pop	hl
	ld	iy, (ix + 9)
	lea	iy, iy + 9
	or	a, a
	sbc	hl, hl
BB2_25:
	ld	de, 2
	add	hl, de
	push	ix
	ld	bc, -353
	add	ix, bc
	ld	(ix), hl
	pop	ix
	ld	de, (ix + 6)
	or	a, a
	sbc	hl, de
	call	__setflag
	jq	p, BB2_92
	lea	hl, iy + 6
	push	ix
	ld	bc, -356
	add	ix, bc
	ld	(ix), hl
	pop	ix
	ld	hl, (iy - 3)
	ld	de, (iy)
	ld	bc, 0
	push	bc
	push	de
	push	hl
	ld	hl, ___main_argc_argv.fat
	push	hl
	call	_transfer_file
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	bit	0, a
	ld	bc, -356
	lea	hl, ix
	push	af
	add	hl, bc
	pop	af
	ld	iy, (hl)
	push	ix
	ld	bc, -353
	push	af
	add	ix, bc
	pop	af
	ld	hl, (ix)
	pop	ix
	jq	nz, BB2_25
	jq	BB2_27
BB2_28:
	ld	iy, (ix + 9)
	ld	hl, (iy + 3)
	ld	de, 2
	push	de
	ld	de, L_.str.24
	push	de
	push	hl
	call	_strncmp
	pop	de
	pop	de
	pop	de
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jq	nz, BB2_32
	ld	hl, L_.str.25
	push	hl
	call	_gui_PrintLine
	pop	hl
	ld	iy, (ix + 9)
	lea	iy, iy + 9
	or	a, a
	sbc	hl, hl
BB2_30:
	ld	de, 2
	add	hl, de
	push	ix
	ld	bc, -353
	add	ix, bc
	ld	(ix), hl
	pop	ix
	ld	de, (ix + 6)
	or	a, a
	sbc	hl, de
	call	__setflag
	jq	p, BB2_92
	lea	hl, iy + 6
	push	ix
	ld	bc, -356
	add	ix, bc
	ld	(ix), hl
	pop	ix
	ld	hl, (iy - 3)
	ld	de, (iy)
	ld	bc, 0
	push	bc
	push	de
	push	hl
	ld	hl, ___main_argc_argv.fat
	push	hl
	call	_transfer_file
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	bit	0, a
	ld	bc, -356
	lea	hl, ix
	push	af
	add	hl, bc
	pop	af
	ld	iy, (hl)
	push	ix
	ld	bc, -353
	push	af
	add	ix, bc
	pop	af
	ld	hl, (ix)
	pop	ix
	jq	nz, BB2_30
BB2_27:
	ld	hl, L_.str.23
	push	hl
	call	_gui_PrintLine
	pop	hl
	call	_sys_WaitKeyCycle
	jq	BB2_92
BB2_32:
	ld	hl, 14
	push	hl
	call	_sys_Malloc
	push	hl
	pop	iy
	pop	hl
	ld	bc, -384
	lea	hl, ix
	add	hl, bc
	ld	(hl), iy
	ld	(iy + 13), 0
	ld	hl, L_.str.26
	ld	bc, -375
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	push	ix
	ld	bc, -378
	add	ix, bc
	ld	(ix), hl
	pop	ix
	xor	a, a
	ld	e, a
	ld	bc, -372
	lea	hl, ix
	add	hl, bc
	ld	(hl), a
	ld	iy, 0
BB2_33:
	ld	bc, -359
	lea	hl, ix
	add	hl, bc
	ld	(hl), e
	push	ix
	ld	bc, -362
	add	ix, bc
	ld	(ix), iy
	pop	ix
	ld	bc, -372
	lea	iy, ix
	add	iy, bc
	ld	a, (iy)
	or	a, a
	jq	z, BB2_37
	ld	hl, L_.str.26
	push	hl
	call	_gui_DrawConsoleWindow
	pop	hl
	ld	bc, -378
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_gui_PrintLine
	pop	hl
	ld	bc, -362
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	hl, 16
	push	hl
	ld	bc, -378
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	bc, -356
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_fs_DirList
	push	hl
	pop	bc
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	a, 2
	ld	iyl, a
	ld	de, -368
	lea	hl, ix
	add	hl, de
	ld	(hl), bc
BB2_35:
	ld	a, iyl
	add	a, -2
	ld	de, 0
	ld	e, a
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	jq	nc, BB2_42
	ex	de, hl
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	ld	(ix - 3), bc
	push	ix
	ld	bc, -356
	add	ix, bc
	ld	hl, (ix)
	pop	ix
	add	hl, de
	push	ix
	ld	bc, -381
	add	ix, bc
	ld	(ix), hl
	pop	ix
	ld	de, (hl)
	push	de
	ld	de, -365
	lea	hl, ix
	add	hl, de
	ld	(hl), iy
	ld	bc, (ix - 3)
	call	_fs_CopyFileName
	ld	bc, -371
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	pop	hl
	ld	bc, -365
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	hl, 2
	push	hl
	call	_bosgfx_SetTextPos
	pop	hl
	pop	hl
	ld	bc, -381
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	iy, (hl)
	bit	4, (iy + 11)
	ld	hl, 47
	push	hl
	call	nz, _gui_PrintChar
	pop	hl
	ld	bc, -371
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_gui_Print
	pop	hl
	ld	bc, -371
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_sys_Free
	pop	hl
	ld	de, -365
	lea	hl, ix
	add	hl, de
	ld	iy, (hl)
	inc	iyl
	push	ix
	ld	de, -368
	add	ix, de
	ld	bc, (ix)
	pop	ix
	jq	BB2_35
BB2_37:
	ld	hl, L_.str.27
	push	hl
	call	_gui_DrawConsoleWindow
	pop	hl
	ld	bc, -375
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_gui_PrintLine
	pop	hl
	ld	bc, -362
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	hl, 16
	push	hl
	ld	bc, -353
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	hl, 2
	push	hl
	ld	bc, -375
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	hl, ___main_argc_argv.fat
	push	hl
	call	_fat_DirList
	push	hl
	pop	bc
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	push	bc
	pop	hl
	ld	de, 16
	or	a, a
	sbc	hl, de
	ld	de, -371
	lea	hl, ix
	push	af
	add	hl, de
	pop	af
	ld	(hl), bc
	jq	c, BB2_39
	ld	hl, 16
	ld	de, -371
	lea	iy, ix
	add	iy, de
	ld	(iy), hl
BB2_39:
	ld	a, 2
	ld	iyl, a
	ld	de, 2
	ld	(ix - 3), de
	ld	de, -368
	lea	hl, ix
	add	hl, de
	ld	(hl), bc
	ld	de, (ix - 3)
BB2_40:
	ld	a, iyl
	add	a, -2
	or	a, a
	sbc	hl, hl
	ld	l, a
	push	ix
	ld	bc, -365
	add	ix, bc
	ld	(ix), hl
	pop	ix
	ld	(ix - 3), de
	push	ix
	ld	de, -371
	add	ix, de
	ld	bc, (ix)
	pop	ix
	or	a, a
	sbc	hl, bc
	ld	de, (ix - 3)
	jq	nc, BB2_42
	ld	bc, -381
	lea	hl, ix
	add	hl, bc
	ld	(hl), iy
	push	iy
	push	de
	call	_bosgfx_SetTextPos
	pop	hl
	pop	hl
	ld	de, -365
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	ld	bc, 18
	call	__imulu
	push	hl
	pop	de
	ld	(ix - 3), bc
	ld	bc, -353
	lea	iy, ix
	add	iy, bc
	ld	iy, (iy)
	add	iy, de
	bit	4, (iy + 13)
	ld	bc, (ix - 3)
	ld	hl, 47
	push	hl
	call	nz, _gui_PrintChar
	pop	hl
	ld	de, -365
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	ld	bc, 18
	call	__imulu
	push	hl
	pop	de
	ld	(ix - 3), bc
	ld	bc, -353
	lea	iy, ix
	add	iy, bc
	ld	hl, (iy)
	add	hl, de
	push	ix
	ld	bc, -384
	add	ix, bc
	ld	iy, (ix)
	pop	ix
	lea	de, iy
	ld	bc, (ix - 3)
	ld	bc, 13
	ldir
	push	iy
	call	_gui_Print
	pop	hl
	ld	bc, -381
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
	inc	iyl
	ld	de, 2
	jq	BB2_40
BB2_42:
	or	a, a
	sbc	hl, hl
	push	hl
	pop	de
	ld	bc, -359
	lea	iy, ix
	add	iy, bc
	ld	a, (iy)
	ld	l, a
	push	ix
	ld	bc, -371
	add	ix, bc
	ld	(ix), hl
	pop	ix
	add	a, 2
	ld	l, a
	push	hl
	push	de
	call	_bosgfx_SetTextPos
	pop	hl
	pop	hl
	ld	hl, L_.str.28
	push	hl
	call	_gui_PrintLine
	pop	hl
BB2_43:
	call	_sys_WaitKeyCycle
	ld	bc, -365
	lea	hl, ix
	add	hl, bc
	ld	(hl), a
	call	_usb_HandleEvents
	ld	bc, -365
	lea	hl, ix
	add	hl, bc
	ld	a, (hl)
	cp	a, 1
	jq	z, BB2_58
	cp	a, 4
	ld	bc, -362
	lea	hl, ix
	push	af
	add	hl, bc
	pop	af
	ld	iy, (hl)
	push	ix
	ld	bc, -359
	push	af
	add	ix, bc
	pop	af
	ld	e, (ix)
	pop	ix
	jq	z, BB2_53
	cp	a, 9
	jq	z, BB2_64
	cp	a, 15
	jq	z, BB2_90
	cp	a, 48
	jq	z, BB2_84
	cp	a, 52
	jq	z, BB2_84
	cp	a, 55
	jq	nz, BB2_43
	ld	bc, -372
	lea	hl, ix
	add	hl, bc
	ld	a, (hl)
	or	a, a
	ld	a, 1
	ld	bc, -362
	lea	iy, ix
	push	af
	add	iy, bc
	pop	af
	ld	iy, (iy)
	jq	z, BB2_52
	ld	a, 0
BB2_52:
	and	a, 1
	ld	bc, -372
	lea	hl, ix
	add	hl, bc
	ld	(hl), a
	jq	BB2_88
BB2_58:
	ld	bc, -359
	lea	hl, ix
	add	hl, bc
	ld	e, (hl)
	ld	a, e
	cp	a, 16
	ld	bc, -362
	lea	iy, ix
	push	af
	add	iy, bc
	pop	af
	ld	iy, (iy)
	ld	(ix - 3), de
	push	ix
	ld	de, -368
	push	af
	add	ix, de
	pop	af
	ld	bc, (ix)
	pop	ix
	ld	de, (ix - 3)
	jq	nc, BB2_61
	ld	(ix - 3), de
	ld	de, -371
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	or	a, a
	sbc	hl, bc
	ld	de, (ix - 3)
	jq	nc, BB2_61
	inc	e
	jq	BB2_33
BB2_61:
	lea	hl, iy
	or	a, a
	sbc	hl, bc
	ld	a, 1
	jq	c, BB2_63
	ld	a, 0
BB2_63:
	and	a, 1
	ld	de, 0
	ld	e, a
	add	iy, de
	ld	bc, -359
	lea	hl, ix
	add	hl, bc
	ld	e, (hl)
	jq	BB2_33
BB2_53:
	ld	a, e
	or	a, a
	jq	nz, BB2_54
	lea	hl, iy
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	hl, 0
	jq	z, BB2_57
	dec	iy
	lea	hl, iy
BB2_57:
	ld	e, 0
	push	hl
	pop	iy
	jq	BB2_33
BB2_64:
	ld	bc, -372
	lea	hl, ix
	add	hl, bc
	ld	a, (hl)
	or	a, a
	inc	bc
	lea	iy, ix
	push	af
	add	iy, bc
	pop	af
	ld	de, (iy)
	jq	z, BB2_67
	ex	de, hl
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	ld	(ix - 3), bc
	ld	bc, -356
	lea	iy, ix
	add	iy, bc
	ld	hl, (iy)
	add	hl, de
	ld	iy, (hl)
	bit	4, (iy + 11)
	ld	bc, (ix - 3)
	jq	z, BB2_70
	push	iy
	call	_fs_CopyFileName
	ld	bc, -365
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	pop	de
	push	hl
	ld	bc, -378
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_fs_JoinPath
	ld	bc, -359
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	pop	hl
	pop	hl
	ld	bc, -378
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_sys_Free
	pop	hl
	ld	bc, -365
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_sys_Free
	pop	hl
	ld	bc, -359
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	bc, -378
	jq	BB2_69
BB2_54:
	dec	e
	jq	BB2_33
BB2_67:
	push	de
	pop	hl
	ld	bc, 18
	call	__imulu
	push	de
	pop	bc
	push	hl
	pop	de
	ld	(ix - 3), bc
	ld	bc, -353
	lea	iy, ix
	add	iy, bc
	ld	iy, (iy)
	add	iy, de
	bit	4, (iy + 13)
	ld	bc, (ix - 3)
	jq	nz, BB2_68
BB2_70:
	ld	hl, 256
	push	hl
	call	_sys_Malloc
	ld	bc, -365
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	pop	hl
	ld	hl, L_.str.29
	push	hl
	call	_gui_DrawConsoleWindow
	pop	hl
	ld	hl, 255
	push	hl
	ld	bc, -365
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_gui_Input
	pop	de
	pop	de
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	bc, -365
	lea	iy, ix
	push	af
	add	iy, bc
	pop	af
	ld	hl, (iy)
	jq	z, BB2_83
	ld	c, (hl)
	ld	de, -372
	lea	iy, ix
	add	iy, de
	ld	a, (iy)
	or	a, a
	ex	de, hl
	jq	z, BB2_75
	ld	a, c
	or	a, a
	jq	nz, BB2_74
	ld	de, -371
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	ld	bc, 3
	call	__imulu
	push	hl
	pop	de
	ld	(ix - 3), bc
	ld	bc, -356
	lea	iy, ix
	add	iy, bc
	ld	hl, (iy)
	add	hl, de
	ld	hl, (hl)
	push	hl
	ld	bc, (ix - 3)
	call	_fs_CopyFileName
	push	hl
	pop	de
	pop	hl
BB2_74:
	ld	bc, -381
	lea	hl, ix
	add	hl, bc
	ld	(hl), de
	ld	de, -371
	lea	iy, ix
	add	iy, de
	ld	hl, (iy)
	ld	bc, 18
	call	__imulu
	push	hl
	pop	de
	ld	(ix - 3), bc
	push	ix
	ld	bc, -353
	add	ix, bc
	ld	hl, (ix)
	pop	ix
	add	hl, de
	push	ix
	ld	bc, -384
	add	ix, bc
	ld	iy, (ix)
	pop	ix
	lea	de, iy
	ld	bc, (ix - 3)
	ld	bc, 13
	ldir
	push	iy
	ld	bc, -375
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_fs_JoinPath
	ld	bc, -368
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	pop	hl
	pop	hl
	push	hl
	call	_sys_Free
	ld	bc, -381
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	jq	BB2_78
BB2_84:
	ld	bc, -372
	lea	hl, ix
	add	hl, bc
	ld	a, (hl)
	or	a, a
	jq	z, BB2_89
	ld	bc, -378
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_fs_ParentDir
	ld	bc, -365
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	pop	hl
	ld	bc, -378
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_sys_Free
	pop	hl
	ld	bc, -365
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	bc, -378
	jq	BB2_86
BB2_68:
	push	bc
	pop	hl
	ld	bc, 18
	call	__imulu
	push	hl
	pop	de
	ld	(ix - 3), bc
	ld	bc, -353
	lea	iy, ix
	add	iy, bc
	ld	hl, (iy)
	add	hl, de
	push	hl
	ld	de, -375
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	push	hl
	ld	bc, (ix - 3)
	call	_fs_JoinPath
	ld	bc, -359
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	pop	hl
	pop	hl
	ld	bc, -375
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_sys_Free
	pop	hl
	ld	bc, -359
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	bc, -375
BB2_69:
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	ld	e, 0
	ld	bc, -362
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
	jq	BB2_33
BB2_89:
	ld	bc, -375
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_fs_ParentDir
	ld	bc, -365
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	pop	hl
	ld	bc, -375
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_sys_Free
	pop	hl
	ld	bc, -365
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	bc, -375
BB2_86:
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	jq	BB2_87
BB2_75:
	ld	(ix - 3), de
	ld	de, -371
	lea	hl, ix
	add	hl, de
	ld	hl, (hl)
	ld	a, c
	ld	bc, 18
	call	__imulu
	push	hl
	pop	bc
	ld	de, -353
	lea	iy, ix
	add	iy, de
	ld	hl, (iy)
	add	hl, bc
	or	a, a
	push	hl
	pop	bc
	ld	de, (ix - 3)
	jq	z, BB2_77
	push	de
	pop	bc
BB2_77:
	ld	de, -368
	lea	iy, ix
	add	iy, de
	ld	(iy), bc
	push	ix
	ld	bc, -384
	add	ix, bc
	ld	iy, (ix)
	pop	ix
	lea	de, iy
	ld	bc, 13
	ldir
	push	iy
	ld	bc, -375
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_fs_JoinPath
	pop	de
BB2_78:
	pop	de
	ld	bc, -372
	lea	iy, ix
	add	iy, bc
	ld	a, (iy)
	or	a, a
	ld	a, 1
	ld	e, a
	jq	nz, BB2_80
	ld	a, 0
	ld	e, a
BB2_80:
	push	de
	ld	bc, -368
	lea	iy, ix
	add	iy, bc
	ld	de, (iy)
	push	de
	push	hl
	ld	hl, ___main_argc_argv.fat
	push	hl
	call	_transfer_file
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	bit	0, a
	ld	hl, L_.str.30
	jq	nz, BB2_82
	ld	hl, L_.str.23
BB2_82:
	push	hl
	call	_gui_PrintLine
	pop	hl
	call	_sys_WaitKeyCycle
	ld	bc, -365
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
BB2_83:
	push	hl
	call	_sys_Free
	pop	hl
BB2_87:
	ld	bc, -362
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
BB2_88:
	push	ix
	ld	bc, -359
	add	ix, bc
	ld	e, (ix)
	pop	ix
	jq	BB2_33
BB2_90:
	ld	bc, -384
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_sys_Free
BB2_91:
	pop	hl
BB2_92:
	ld	hl, ___main_argc_argv.fat
	push	hl
	call	_fat_Deinit
BB2_93:
	pop	hl
	ld	hl, ___main_argc_argv.global+3
	push	hl
	call	_msd_Close
	jq	BB2_94
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	private	_handleUsbEvent
_handleUsbEvent:
	call	__frameset0
	ld	iy, 0
	ld	de, 1
	ld	hl, (ix + 6)
	or	a, a
	sbc	hl, de
	push	hl
	pop	de
	ld	bc, 4
	or	a, a
	sbc	hl, bc
	jq	nc, BB3_7
	ld	bc, (ix + 9)
	ld	iy, (ix + 12)
	ld	hl, LJTI3_0
	add	hl, de
	add	hl, de
	add	hl, de
	ld	hl, (hl)
	jp	(hl)
BB3_2:
	ld	hl, L_.str.31
	push	hl
	call	_gui_PrintLine
	ld	iy, (ix + 12)
	pop	hl
	ld	hl, (iy)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	pea	iy + 3
	call	nz, _msd_Close
	pop	hl
	ld	hl, (ix + 12)
	ld	de, 0
	ld	(hl), de
	ld	iy, 0
	jq	BB3_7
BB3_5:
	ld	hl, L_.str.34
	push	hl
	call	_gui_PrintLine
	ld	iy, 100
	jq	BB3_6
BB3_4:
	ld	hl, L_.str.33
	ld	(iy), bc
	push	hl
	call	_gui_PrintLine
	ld	iy, 0
	jq	BB3_6
BB3_3:
	ld	hl, L_.str.32
	push	hl
	call	_gui_PrintLine
	pop	hl
	ld	hl, (ix + 9)
	push	hl
	call	_usb_ResetDevice
	push	hl
	pop	iy
BB3_6:
	pop	hl
BB3_7:
	lea	hl, iy
	pop	ix
	ret
	section	.text,"ax",@progbits
	section	.rodata,"a",@progbits
lJTI3_0:
	private	LJTI3_0
LJTI3_0:
	dl	BB3_2
	dl	BB3_3
	dl	BB3_5
	dl	BB3_4

	section	.rodata,"a",@progbits
	private	L_.str
L_.str:
	db	".8x", 0

	section	.rodata,"a",@progbits
	private	L_.str.1
L_.str.1:
	db	".8X", 0

	section	.rodata,"a",@progbits
	private	L_.str.2
L_.str.2:
	db	"Transferring ", 0

	section	.rodata,"a",@progbits
	private	L_.str.3
L_.str.3:
	db	" to ", 0

	section	.rodata,"a",@progbits
	private	L_.str.4
L_.str.4:
	db	"source file not found!", 0

	section	.rodata,"a",@progbits
	private	L_.str.5
L_.str.5:
	db	"File too large for internal filesystem!", 0

	section	.rodata,"a",@progbits
	private	L_.str.6
L_.str.6:
	db	"**TI83F*", 26, 10, 0

	section	.rodata,"a",@progbits
	private	L_.str.7
L_.str.7:
	db	"/tivars", 0

	section	.rodata,"a",@progbits
	private	L_.str.8
L_.str.8:
	db	"Transferring 8x var to ", 0

	section	.rodata,"a",@progbits
	private	L_.str.9
L_.str.9:
	db	"Failed to create destination file!", 0

	section	.rodata,"a",@progbits
	private	L_.str.10
L_.str.10:
	db	"Read error", 0

	section	.rodata,"a",@progbits
	private	L_.str.11
L_.str.11:
	db	"Write error", 0

	section	.bss,"aw",@nobits
	private	___main_argc_argv.partitions
___main_argc_argv.partitions:
	rb	80

	section	.bss,"aw",@nobits
	private	___main_argc_argv.global
___main_argc_argv.global:
	rb	1027

	section	.bss,"aw",@nobits
	private	___main_argc_argv.fat
___main_argc_argv.fat:
	rb	1041

	section	.rodata,"a",@progbits
	private	L_.str.12
L_.str.12:
	db	"usb init error.", 0

	section	.rodata,"a",@progbits
	private	L_.str.13
L_.str.13:
	db	"operation cancelled.", 0

	section	.rodata,"a",@progbits
	private	L_.str.14
L_.str.14:
	db	"usb enable error.", 0

	section	.rodata,"a",@progbits
	private	L_.str.15
L_.str.15:
	db	"failed opening msd", 0

	section	.rodata,"a",@progbits
	private	L_.str.16
L_.str.16:
	db	"opened msd", 0

	section	.rodata,"a",@progbits
	private	L_.str.17
L_.str.17:
	db	"error getting msd info", 0

	section	.rodata,"a",@progbits
	private	L_.str.18
L_.str.18:
	db	"no paritions found", 0

	section	.rodata,"a",@progbits
	private	L_.str.19
L_.str.19:
	db	"opened fat partition", 0

	section	.rodata,"a",@progbits
	private	L_.str.20
L_.str.20:
	db	"no fat32 paritions found", 0

	section	.rodata,"a",@progbits
	private	L_.str.21
L_.str.21:
	db	"-r", 0

	section	.rodata,"a",@progbits
	private	L_.str.22
L_.str.22:
	db	"Receiving Files", 0

	section	.rodata,"a",@progbits
	private	L_.str.23
L_.str.23:
	db	"Failed to transfer files.", 0

	section	.rodata,"a",@progbits
	private	L_.str.24
L_.str.24:
	db	"-s", 0

	section	.rodata,"a",@progbits
	private	L_.str.25
L_.str.25:
	db	"Sending files", 0

	section	.rodata,"a",@progbits
	private	L_.str.26
L_.str.26:
	db	"/", 0

	section	.rodata,"a",@progbits
	private	L_.str.27
L_.str.27:
	db	"MSD/", 0

	section	.rodata,"a",@progbits
	private	L_.str.28
L_.str.28:
	db	">", 0

	section	.rodata,"a",@progbits
	private	L_.str.29
L_.str.29:
	db	"File to write: (default -> same)", 0

	section	.rodata,"a",@progbits
	private	L_.str.30
L_.str.30:
	db	"Transfer completed successfuly.", 0

	section	.rodata,"a",@progbits
	private	L_.str.31
L_.str.31:
	db	"usb device disconnected", 0

	section	.rodata,"a",@progbits
	private	L_.str.32
L_.str.32:
	db	"usb device connected", 0

	section	.rodata,"a",@progbits
	private	L_.str.33
L_.str.33:
	db	"usb device enabled", 0

	section	.rodata,"a",@progbits
	private	L_.str.34
L_.str.34:
	db	"usb device disabled", 0

	ident	"clang version 14.0.0 (https://github.com/jacobly0/llvm-project a139def90d26173f771eb1eca797633d1fbb2797)"
	extern	__Unwind_SjLj_Register
	extern	_bosgfx_SetTextPos
	extern	_usb_WaitForInterrupt
	extern	_fat_GetSize
	extern	_usb_ResetDevice
	extern	_fat_Close
	extern	_msd_Read
	extern	_fs_GetFDPtr
	extern	_fs_OpenFile
	extern	_gui_PrintInt
	extern	_msd_Open
	extern	_strlen
	extern	__setflag
	extern	_fat_Init
	extern	_msd_FindPartitions
	extern	_fs_JoinPath
	extern	_strchr
	extern	_fs_WriteByte
	extern	_fat_Deinit
	extern	_fat_Read
	extern	__iand
	extern	_fs_ParentDir
	extern	_sys_WaitKeyCycle
	extern	_fs_DirList
	extern	_sys_Free
	extern	_fat_Open
	extern	_fat_Delete
	extern	_gui_Input
	extern	_os_GetCSC
	extern	_gui_DrawConsoleWindow
	extern	_usb_Cleanup
	extern	_msd_Close
	extern	_fs_WriteRaw
	extern	_fat_Create
	extern	_fs_BaseName
	extern	__frameset
	extern	_fat_Write
	extern	_fs_CreateFile
	extern	_gui_Print
	extern	_fs_CopyFileName
	extern	_strcmp
	extern	_gui_PrintLine
	extern	_TIVarToPath
	extern	_fs_GetFDLen
	extern	__ishru
	extern	_usb_HandleEvents
	extern	_gui_NewLine
	extern	_sys_Malloc
	extern	__Unwind_SjLj_Unregister
	extern	__imulu
	extern	_msd_Info
	extern	_fat_DirList
	extern	__lcmpu
	extern	__frameset0
	extern	_strncmp
	extern	_msd_Write
	extern	_gui_PrintChar
	extern	_usb_Init
