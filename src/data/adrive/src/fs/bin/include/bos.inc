
define bos? bos
namespace bos
; jump table
	;
?boot_os                         := $20108
?handle_interrupt                := $2010C
?HandleInstruction               := $20110
;DONOTHING                       := $20114
;DONOTHING                       := $20118
?handle_offsetcall               := $2011C
;DONOTHING                       := $20120
?sys_ExecuteFile                 := $20124
?os_GetOSInfo                    := $20128
?fs_OpenFile                     := $2012C
?fs_GetSectorAddress             := $20130
?fs_CheckDirExists               := $20134
?fs_GetPathLastName              := $20138
?fs_CopyFileName                 := $2013C
?fs_Read                         := $20140
?fs_Write                        := $20144
?sys_AddHLAndA                   := $20148
?sys_AnyKey                      := $2014C
?sys_FreeAll                     := $20150
?sys_GetKey                      := $20154
?sys_KbScan                      := $20158
?sys_Malloc                      := $2015C
;DONOTHING                       := $20160
?sys_MemSet                      := $20164
;DONOTHING                       := $20168
?sys_WaitKey                     := $2016C
?sys_WaitKeyCycle                := $20170
?gui_DrawConsoleWindow           := $20174
?gui_Input                       := $20178
?gui_NewLine                     := $2017C
?gui_Print                       := $20180
?gui_PrintInt                    := $20184
?gui_Scroll                      := $20188
?gfx_BlitBuffer                  := $2018C
?gfx_PrintString                 := $20190
?_MemClear                       := $20194
?_PushOP1                        := $20198
?_PopOP1                         := $2019C
?_Mov9ToOP1                      := $201A0
?_CpHLDE                         := $201A4
?_Mov8b                          := $201A8
?_ChkFindSym                     := $201AC
?_LoadDEInd_s                    := $201B0
?_EnoughMem                      := $201B4
?_InsertMem                      := $201B8
?_SetHLUTo0                      := $201BC
?_PutS                           := $201C0
?_GetCSC                         := $201C4
?_NewLine                        := $201C8
?_ClrScrn                        := $201CC
?_HomeUp                         := $201D0
?_ErrMemory                      := $201D4
?_DrawStatusBar                  := $201D8
?_os_GetSystemInfo               := $201DC
?_UsbPowerVbus                   := $201E0
?_UsbUnpowerVbus                 := $201E4
?sys_EraseFlashSector            := $201E8
?sys_FlashUnlock                 := $201EC
?sys_FlashLock                   := $201F0
?fs_CreateFile                   := $201F4
?strupper                        := $201F8
?strlower                        := $201FC
?fs_AbsPath                      := $20200
?fs_MultByBytesPerSector         := $20204
?_LoadLibraryOP1                 := $20208
?fs_OpenFileInDir                := $2020C
?fs_SetSize                      := $20210
?fs_WriteFile                    := $20214
?sys_HLToString                  := $20218
?fs_DeleteFile                   := $2021C
?_DelVar                         := $20220
?_CreateVar                      := $20224
?gui_InputNoClear                := $20228
?fs_InitClusterMap               := $2022C
?sys_WriteFlash                  := $20230
?sys_WriteFlashA                 := $20234
;DONOTHING                       := $20238
;DONOTHING                       := $2023C
?fs_ParentDir                    := $20240
?fs_StrToFileEntry               := $20244
?fs_DirList                      := $20248
?sys_Free                        := $2024C
?sys_CallExecuteFile             := $20250
?sys_JumpExecuteFile             := $20254
?sys_InitDevice                  := $20258
?sys_DeinitDevice                := $2025C
?sys_GetDeviceAddress            := $20260
?sys_ReadDevice                  := $20264
?sys_WriteDevice                 := $20268
?fs_GetSector                    := $2026C
?fs_WriteByte                    := $20270
?fs_RenameFile                   := $20274
?_SetCursorPos                   := $20278
?fs_CreateDir                    := $2027C
?gfx_BufClear                    := $20280
?gfx_LcdClear                    := $20284
?fs_SanityCheck                  := $20288
?sys_SetupOnInterruptHandler     := $2028C
?gui_PrintChar                   := $20290
?gfx_SetDraw                     := $20294
?gui_PrintString                 := $20298
?gui_PrintLine                   := $2029C
?gui_PrintUInt                   := $202A0
?sys_WriteFlashFullRam           := $202A4
?sys_WriteFlashByteFullRam       := $202A8
?fs_GetFilePtr                   := $202AC
?sys_ExecuteFileFromPtr          := $202B0
?sys_ExecuteFileHL               := $202B4
?sys_TurnOff                     := $202B8
?sys_NextProcessId               := $202BC
?sys_PrevProcessId               := $202C0
?sys_FreeProcessId               := $202C4
?fs_GarbageCollect               := $202C8
?gfx_SwapTextColors              := $202CC
?fs_WriteNewFile                 := $202D0
?gfx_SetFont                     := $202D4
?gfx_SetDefaultFont              := $202D8
?sys_FreeRunningProcessId        := $202DC
?util_Zx7Decompress              := $202E0
?sys_CheckMallocRAM              := $202E4
?gfx_Compute                     := $202E8
?gfx_FillRectangle               := $202EC
?gfx_FillScreen                  := $202F0
?gfx_GetFontPtr                  := $202F4
?gfx_HorizLine                   := $202F8
?gfx_InitStdPalette              := $202FC
?gfx_NextLine                    := $20300
?gfx_PrintChar                   := $20304
?gfx_PrintHexA                   := $20308
?gfx_PrintUInt                   := $2030C
?gfx_Rectangle                   := $20310
?gfx_Set8bpp                     := $20314
?gfx_Set16bpp                    := $20318
?gfx_SetTextXY                   := $2031C
?gfx_Sprite                      := $20320
?gfx_Sprite2x                    := $20324
?gfx_VertLine                    := $20328
?sys_Malloc32Align32             := $2032C
?sys_Malloc64Align256            := $20330
?gfx_PrintStringXY               := $20334
?gfx_GetTextX                    := $20338
?gfx_GetTextY                    := $2033C
?fs_CheckWritable                := $20340
?fs_CheckWritableFD              := $20344
?sys_OpenFileInPath              := $20348
?sys_VarString                   := $2034C
?fs_GetFreeSpace                 := $20350
?fs_GetFDPtr                     := $20354
?fs_GetFDLen                     := $20358
?_OP1ToPath                      := $2035C
?th_WaitKeyCycle                 := $20360
?fs_JoinPath                     := $20364
?sys_MallocPersistent            := $20368
?sys_OpenFileInVar               := $2036C
?fs_BaseName                     := $20370
?fs_MoveFile                     := $20374
?fs_WriteRaw                     := $20378
?_UnpackUpdates                  := $2037C
; defines
?LCD_PAL?    := 0E30200h
?LCD_CTRL?   := 0E30018h
?LCD_VRAM?   := 0D40000h
?LCD_BUFFER? := LCD_VRAM + LCD_WIDTH*LCD_HEIGHT
?LCD_WIDTH?  := 320
?LCD_HEIGHT? := 240
?LCD_8BPP?   := $27
?LCD_16BPP?  := $2D
?TEXT_MAX_ROW    := 231
?RAM_START  := 0D00400h
?flag_start             := $D00000
?currow?                := console_line
?curcol?                := console_col
?lcd_bg_color           := $D00210
?lcd_text_fg            := $D00211
?lcd_text_bg            := $D00212
?color_primary          := $D00213
?font_spacing           := $D00214
?font_data              := $D00217
?lcd_x                  := $D0021A
?lcd_y                  := $D0021D
?free_RAM_ptr           := $D00220
?remaining_free_RAM     := $D00223
?cursor_color           := $D00226
?console_col            := $D00227
?op_stack_ptr           := $D00228
?console_line           := $D0022C
?bottom_of_RAM          := $D0022D
?flashStatusByte        := $D00230
?filesystem_driver      := $D00231
?on_interrupt_handler   := $D00235 ;3 bytes. Jump to on key interrupt handler. Byte preceeding this must be $C3 or $C9
?cur_lcd_buffer         := $D00238 ;3 bytes. Points to current LCD buffer
?running_process_id     := $D0023B ;1 byte. Current process ID (used for per-program memory allocation)
?lcd_text_fg2           := $D0023C
?lcd_text_bg2           := $D0023D
?running_program_ptr    := $D0023E ;3 bytes. Stores pointer to currently running program
?ScrapMem2              := $D00279
?ScrapByte              := $D0027C
?ScrapWord              := $D0027D
?ScrapMem               := $D0027D
?ExecutingFileFd        := $D00280 ; 3 bytes. Pointer to currently executing file descriptor. -1 if file not found. 0 if file descriptor is not applicable
?LastCommandResult      := $D00283 ; 4 bytes. Stores result of previously executed command
?last_keypress          := $D00287 ; 1 byte. Last keypress returned by an os getkey routine
?return_code_flags      := $D00288 ; flag byte that determines how to interpret the return value of the last run program. Is to be set within the program for non-default return interpretation.
?asm_prgm_size          := $D00289 ;3 bytes
?top_of_UserMem         := $D0028C ;3 bytes
?SaveSP                 := $D0028F ;3 bytes, saves SP when running programs.
?current_thread         := $D00292 ;1 byte, currently running thread ID
?threading_enabled      := $D00293 ;1 byte, determines if software threading is enabled and whether it should be used in OS routines
?copy_buffer            := $D00294 ;3 bytes, points to first copy buffer entry, or -1 if nothing is stored.
?fsOP1                  := $D002A0
?fsOP2                  := $D002B0
?fsOP3                  := $D002C0
?gfx_string_temp        := $D002D0 ;16 bytes, temp location for integer printing
?fsOP4                  := $D002D0
?fsOP5                  := $D002E0
?fsOP6                  := $D002F0
?thread_parents         := $D00300 ;256 bytes, one per thread. Saves ID of thread that spawned a given thread. A thread will only be run if it's parent thread is awake
?InputBuffer            := $D00400
?current_working_dir    := $D00600
?op_stack_bot           := $D00700
?op_stack_top           := $D00800 ;256 bytes downward
?thread_map             := $D00900 ; thread map. 256 threads. Active threads have bit 7 set.
?safeRAM                := $D00C00 ; 62464 bytes scrap RAM
?safeRAM_len            := 62464
?usbArea                := $D13FD8 ; 14306 bytes used for usb, probably need to disable timer3/usb interrupts to use
?usbHandleKeys          := $D14091 ; zero this byte while using usbArea to keep GetCSC from affecting other parts of usbArea
?usbInited              := $D177B7 ; zero this byte while using usbArea and to reset the usb stack when interrupts are re-enabled
?reservedRAM            := $D177BA
?bos_UserMem            := $D1A881
?libload_top_ptr        := $D2F000
?thread_temp_save       := $D2F000 ; temporary save location for registers when a thread switch is triggered. 16 bytes per thread, 256 threads = 4096 bytes.
?malloc_cache           := $D2F800 ;4096 bytes
?bottom_of_malloc_RAM   := $D30000
?top_of_RAM             := $D40000
?start_of_user_archive  := $040000 ;sector $04
?end_of_user_archive    := $3B0000 ;sector $3B, start of certificate
?asset_locations_start      := $3C0000
?fd_readonly   := 0
?fd_hidden     := 1
?fd_system     := 2
?fd_subfile    := 3
?fd_subdir     := 4
?fd_device     := 5
?fd_elevated   := 7
?fsentry_endofdir        := $00
?fsentry_dot             := $2E
?fsentry_deleted         := $F0
?fsentry_longfilename    := $F1
?fsentry_unlisted        := $F2
?fsentry_endofdir2       := $FF
?fsentry_filename            := $00
?fsentry_filename.len        := 8
?fsentry_fileext             := $08
?fsentry_fileext.len         := 3
?fsentry_fileattr            := $0B
?fsentry_fileattr.len        := 1
?fsentry_filesector          := $0C
?fsentry_filesector.len      := 2
?fsentry_filelen             := $0E
?fsentry_filelen.len         := 2
?threadsDisabled             := 0
?threadsEnabled              := 1
?threadOSRoutines            := 2
?bThreadAlive                := 7
?bThreadPersistent           := 6
?bThreadSleeping             := 5
?bIsFlashUnlocked     := 0
?bKeepFlashUnlocked   := 1
?mIsFlashUnlocked     := 1
?mKeepFlashUnlocked   := 2
?bReturnNotError      := 0
?bReturnHex           := 1
?bReturnLong          := 2
?bSilentReturn        := 3
?fs_cluster_map := $3BE000
?fs_cluster_map.len := 7040
?fs_cmap_length := fs_cluster_map.len
?fs_root_dir_lba := $010000 shr 9
?fs_root_dir_address := start_of_user_archive + $010000

end namespace